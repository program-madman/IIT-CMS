{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue?vue&type=style&index=0&id=8f24c554&scoped=true&lang=css&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue","mtime":1639836986305},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tZXNzYWdlLWxpc3QtdGV4dCB7CiAgZm9udC1mYW1pbHk6IFBpbmdGYW5nIFNDOwogIGZvbnQtd2VpZ2h0OiBzZW1pYm9sZDsKICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDsKICBsaW5lLWhlaWdodDogMjBweDsKICBsZXR0ZXItc3BhY2luZzogMHB4OwogIHRleHQtYWxpZ246IGxlZnQ7Cn0KLm1lc3NhZ2UtbGlzdC1yZWxlYXNldGltZS10ZXh0IHsKICBvcGFjaXR5OiAwLjgwMDAwMDAxMTkyMDkyOTsKICBjb2xvcjogIzMzMzMzMzsKfQoubWVzc2FnZS1saXN0LXRpbWUtdGV4dCB7CiAgY29sb3I6ICM2NjY2NjY7CiAgZm9udC1mYW1pbHk6IFJvYm90bzsKICBmb250LXdlaWdodDogcmVndWxhcjsKfQoubWVzc2FnZS1saXN0LW9wZXJhdGUtdHlwZS10ZXh0ewogIGNvbG9yOiAjMzMzMzMzOwogIGZvbnQtZmFtaWx5OiBSb2JvdG87CiAgZm9udC13ZWlnaHQ6IHJlZ3VsYXI7Cn0KLm1lc3NhZ2UtbGlzdC10aXRsZS10ZXh0ewogIGNvbG9yOiAjMTg2N0MwOwogIGZvbnQtZmFtaWx5OiBSb2JvdG87CiAgZm9udC13ZWlnaHQ6IHJlZ3VsYXI7Cn0K"},{"version":3,"sources":["messageCenter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"messageCenter.vue","sourceRoot":"src/views/page","sourcesContent":["<template>\n  <v-container fluid class=\"ml-0 mx-auto\">\n    <v-card class=\"mx-auto blue\">\n      <v-list two-line>\n        <v-card-actions>\n          <v-btn \n          v-if=\"messageDates.length > 0\"\n          min-width=\"105px\"\n          height=\"36px\"\n          depressed\n          dark\n          outlined\n          color=\"#1867C0FF\"\n          style=\"margin-left: 8px; margin-top:1px\"\n           @click=\"markAllRead\">全部已读</v-btn>\n        </v-card-actions>\n         <v-subheader \n         class=\"subtitle-1 my-n2 \" \n         v-text=\"'还没有任何消息'\"\n         v-if=\"messageDates.length === 0\"\n         />\n        \n        <template v-for=\"date in messageDates\">\n          <v-subheader\n            class=\"subtitle-2 my-n2\"\n            :key=\"date\"\n            v-text=\"date\"\n          ></v-subheader>\n          <template v-for=\"(msg, index1) in messageMap.get(date)\">\n            <v-list-item :key=\"msg.operator\" class=\"item\">\n              <v-list-item-content @click=\"toDetail(msg)\">\n                <v-row class=\"message-list-text\">\n                  <span class=\"mt-n2\" v-if=\"msg.isRead === false\">\n                    <v-icon large color=\"red darken-3\">mdi-circle-small</v-icon>\n                  </span>\n                  <span class=\"ml-9\" v-else></span>\n                  <span class=\"ml-2 message-list-releasetime-text\"\n                    >{{ msg.releaseTime }}\n                  </span>\n                  <span class=\"ml-2 message-list-time-text\">{{ msg.time }}</span>\n                  <span class=\"ml-2 message-list-time-text\">{{ msg.operator }}</span>\n                  <span class=\"ml-2 message-list-operate-type-text\">{{ msg.typeText }} </span\n                  ><a class=\"ml-3 message-list-title-text\">{{ msg.messageTitle }} </a>\n                </v-row>\n              </v-list-item-content>\n            </v-list-item>\n            <v-divider\n              class=\"my-sm-auto\"\n              v-show=\"index1 != messageMap.get(date).length - 1\"\n              :key=\"msg.messageTitle\"\n            ></v-divider>\n          </template>\n        </template>\n      </v-list>\n    </v-card>\n    <page-loader @onLoadMore=\"onLoadMore\" />\n  </v-container>\n  <!--\n\n  <v-container style=\"max-width: 600px\">\n    <v-timeline dense :align-top=\"true\">\n      <template v-for=\"(date, pos) in messageDates\">\n        <v-timeline-item :key=\"pos + '_parent'\" class=\"white--text mb-1\">\n          <v-subheader class=\"subtitle-1 my-n2\" v-text=\"date\"></v-subheader>\n        </v-timeline-item>\n        <template v-for=\"msg in messageMap.get(date)\">\n           \n          <v-timeline-item\n            v-if=\"msg.isRead\"\n            :key=\"index+'_read'\"\n            class=\"mb-4\"\n            color=\"grey\"\n            icon-color=\"grey lighten-2\"\n            small\n          >\n            <v-card dark :color=\"'indigo'\" class=\"elevation-2\" @click=\"toDetail(msg)\">\n              <v-row>\n                <v-card-title class=\"text-h6 ml-3\">\n                  {{ msg.operator }}\n                </v-card-title>\n                <v-subheader\n                  class=\"subtitle-1 my-0 mt-2 ml-0\"\n                  v-text=\"msg.time\"\n                ></v-subheader>\n              </v-row>\n              <v-col>\n                <p class=\"ml-1\" :style=\"{ color: getColor(msg.operation) }\">\n                  {{ msg.typeText }}\n                </p>\n                <p class=\"ml-1\" :style=\"{ color: getColor('1') }\">\n                  {{ msg.messageTitle }}\n                </p>\n              </v-col>\n            </v-card>\n          </v-timeline-item>\n          \n          <v-timeline-item\n            :key=\"msg.id\"\n            class=\"mb-4\"\n            :color=\"msg.color\"\n            icon-color=\"grey lighten-2\"\n            small\n          >\n            <v-card\n              :dark=\"!msg.isRead\"\n              :color=\"msg.cardColor\"\n              class=\"elevation-2\"\n              @click=\"toDetail(msg)\"\n            >\n              <v-row>\n                <v-card-title class=\"text-h6 ml-3 mb-2\">\n                  {{ msg.operator }}\n                </v-card-title>\n\n                <v-subheader\n                  class=\"subtitle-1 my-0 mt-2 ml-0\"\n                  v-text=\"msg.time\"\n                ></v-subheader>\n              </v-row>\n\n              <v-col class=\"white\">\n                <p class=\"ml-1\" :style=\"{ color: getColor(msg.operation) }\">\n                  {{ msg.typeText }}\n                </p>\n                <p class=\"ml-1\" :style=\"{ color: getColor('1') }\">\n                  {{ msg.messageTitle }}\n                </p>\n                <v-spacer></v-spacer>\n              </v-col>\n            </v-card>\n          </v-timeline-item>\n        </template>\n      </template>\n    </v-timeline>\n    <page-loader @onLoadMore=\"onLoadMore\" /> \n  </v-container>\n  -->\n</template>\n\n<script>\nimport {\n  getUserMessageList,\n  markAllMessageRead,\n  markMessageReadOne,\n} from \"@/api/getData.js\";\nimport { jumpToDetail } from \"@/utils/common.js\";\nimport { getMsgReminderStatusDesc } from \"@/utils/articleUtils.js\";\nimport { EventBus } from \"@/utils/event-bus\";\nexport default {\n  mounted() {\n    //初始化..... 需要吗？\n    this.messageMap = new Map();\n    this.messageDates = [];\n    this.currentPage = 1;\n    this.loadUserMessage(this.currentPage, this.pageNumber);\n  },\n  components: {\n    pageLoader: () => import(\"./articleList/pageLoader.vue\"),\n  },\n  data: () => ({\n    messageMap: new Map(),\n    messageDates: [],\n    pageNumber: 10,\n    currentPage: 1,\n  }),\n  methods: {\n    getColor(msgStatus) {\n      if (msgStatus === \"0\") return \"#999999\";\n      else if (msgStatus === \"4\") return \"#F44336\";\n      else if (msgStatus === \"-1\") return \"#1867C0\";\n      else return \"#1867C0\";\n    },\n\n    //go to article detail page\n    toDetail(message) {\n      jumpToDetail(this.$router, message.messageId);\n      if (message.isRead === false) {\n        this.markOnceRead(message);\n      }\n    },\n\n    onLoadMore() {\n      if (this.loading == true) return;\n      this.loading = true;\n      this.loadUserMessage(this.currentPage, this.pageNumber);\n    },\n\n    markAllRead() {\n      markAllMessageRead()\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            EventBus.$emit(\"makeAllMsgRead\", \"all message readed\");\n          }\n        })\n        .catch();\n    },\n\n    markOnceRead(message) {\n      markMessageReadOne(message.id)\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            EventBus.$emit(\"markSingleRead\", \"one message readed\");\n            message.isRead = true;\n          }\n        })\n        .catch();\n    },\n\n    //set all unread articles as read.\n    allRead() {\n      console.log(\"set all message as read\");\n      this.items.forEach((item) => {\n        item.info.forEach((i) => {\n          i.readStatus = 1;\n        });\n      });\n    },\n\n    loadUserMessage(pageNum, pageSize) {\n      getUserMessageList(pageNum, pageSize)\n        .then((response) => {\n          this.fillDatas(response);\n        })\n        .catch();\n    },\n\n    fillDatas(response) {\n      console.debug(\"respone\" + JSON.stringify(response));\n      if (\n        response == null ||\n        response.data == null ||\n        response.data.length == 0\n      ) {\n        return;\n      }\n      this.loading = false;\n      this.currentPage++;\n      for (let i = 0; i < response.data.length; i++) {\n        let message = response.data[i];\n        let date = message.operationTime.split(\" \");\n        let key = \"\";\n        console.log(\"######## date =========> ####### \" + JSON.stringify(date));\n        if (date != null && typeof key != undefined && date.length >= 2) {\n          key = date[0];\n          message.time = date[1];\n          message.prefixTime = key;\n        } else {\n          key = message.operationTime;\n        }\n        if (key != null && typeof key != undefined && key != \"\") {\n          let list = this.messageMap.get(key);\n          if (list == null || typeof list == undefined) {\n            list = [];\n          }\n          message.color = message.isRead ? \"grey\" : \"red\";\n          message.cardColor = message.isRead ? \"grey\" : \"blue-grey\";\n          //----- mock effect ----\n          //message.color = i % 2 === 0 ? \"grey\" : \"red\";\n          //message.cardColor = i % 2 === 0 ? \"grey\" : \"indigo\";\n          //message.isRead = i % 2 === 0 ? true : false;\n          //----- mock effect ----\n          message.typeText = getMsgReminderStatusDesc(message.operation);\n          console.log(\"typeText ==========>\" + message.color);\n          list.push(message);\n          this.messageMap.set(key, list);\n        }\n      }\n      this.messageDates = Array.from(this.messageMap.keys());\n      //alert(\"on response length >>>> \"+Array.from(this.messageDates).length)\n    },\n  },\n\n  //Set the length of a paragraph\n  filters: {\n    length(text, length, suffix = \"...\") {\n      if (!text) {\n        return;\n      }\n      if (text.length <= length) {\n        return text;\n      }\n      return (text + \"\").replace(/\\n/g, \"<br/>\").substring(0, length) + suffix;\n    },\n  },\n};\n</script>\n<style scoped>\n.message-list-text {\n  font-family: PingFang SC;\n  font-weight: semibold;\n  font-size: 14px !important;\n  line-height: 20px;\n  letter-spacing: 0px;\n  text-align: left;\n}\n.message-list-releasetime-text {\n  opacity: 0.800000011920929;\n  color: #333333;\n}\n.message-list-time-text {\n  color: #666666;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-operate-type-text{\n  color: #333333;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-title-text{\n  color: #1867C0;\n  font-family: Roboto;\n  font-weight: regular;\n}\n</style>"]}]}