{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue","mtime":1640475499754},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZ2V0VXNlck1lc3NhZ2VMaXN0LAogIG1hcmtBbGxNZXNzYWdlUmVhZCwKICBtYXJrTWVzc2FnZVJlYWRPbmUsCn0gZnJvbSAiQC9hcGkvZ2V0RGF0YS5qcyI7CmltcG9ydCB7IGp1bXBUb0RldGFpbCB9IGZyb20gIkAvdXRpbHMvY29tbW9uLmpzIjsKaW1wb3J0IHsgZ2V0TXNnUmVtaW5kZXJTdGF0dXNEZXNjIH0gZnJvbSAiQC91dGlscy9hcnRpY2xlVXRpbHMuanMiOwppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIkAvdXRpbHMvZXZlbnQtYnVzIjsKaW1wb3J0IHsgRGVib3VuY2UgfSBmcm9tICJAL3V0aWxzL3Rvb2xzLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQoKSB7CiAgICAvL+WIneWni+WMli4uLi4uIOmcgOimgeWQl++8nwogICAgdGhpcy5tZXNzYWdlTWFwID0gbmV3IE1hcCgpOwogICAgdGhpcy5tZXNzYWdlRGF0ZXMgPSBbXTsKICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgdGhpcy5sb2FkVXNlck1lc3NhZ2UodGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlTnVtYmVyKTsKICAgIEV2ZW50QnVzLiRlbWl0KCJyZWZyZXNoVW5yZWFkIiwgInJlZnJlc2giKTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIHBhZ2VMb2FkZXI6ICgpID0+IGltcG9ydCgiLi9hcnRpY2xlTGlzdC9wYWdlTG9hZGVyLnZ1ZSIpLAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIG1lc3NhZ2VNYXA6IG5ldyBNYXAoKSwKICAgIG1lc3NhZ2VEYXRlczogW10sCiAgICBwYWdlTnVtYmVyOiAxMCwKICAgIGN1cnJlbnRQYWdlOiAxLAogIH0pLAogIG1ldGhvZHM6IHsKICAgIHJlc2V0KCkgewogICAgICB0aGlzLm1lc3NhZ2VNYXAgPSBuZXcgTWFwKCk7CiAgICAgIHRoaXMubWVzc2FnZURhdGVzID0gW107CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgfSwKCiAgICBnZXRDb2xvcihtc2dTdGF0dXMpIHsKICAgICAgaWYgKG1zZ1N0YXR1cyA9PT0gIjAiKSByZXR1cm4gIiM5OTk5OTkiOwogICAgICBlbHNlIGlmIChtc2dTdGF0dXMgPT09ICI0IikgcmV0dXJuICIjRjQ0MzM2IjsKICAgICAgZWxzZSBpZiAobXNnU3RhdHVzID09PSAiLTEiKSByZXR1cm4gIiMxODY3QzAiOwogICAgICBlbHNlIHJldHVybiAiIzE4NjdDMCI7CiAgICB9LAoKICAgIC8vZ28gdG8gYXJ0aWNsZSBkZXRhaWwgcGFnZQogICAgdG9EZXRhaWwobWVzc2FnZSkgewogICAgICBqdW1wVG9EZXRhaWwodGhpcy4kcm91dGVyLCBtZXNzYWdlLm1lc3NhZ2VJZCk7CiAgICAgIGlmIChtZXNzYWdlLmlzUmVhZCA9PT0gZmFsc2UpIHsKICAgICAgICB0aGlzLm1hcmtPbmNlUmVhZChtZXNzYWdlKTsKICAgICAgfQogICAgfSwKCiAgICBvbkxvYWRNb3JlKCkgewogICAgICBpZiAodGhpcy5sb2FkaW5nID09IHRydWUpIHJldHVybjsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5sb2FkVXNlck1lc3NhZ2UodGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlTnVtYmVyKTsKICAgIH0sCgogICAgbWFya0FsbFJlYWQ6IERlYm91bmNlKGZ1bmN0aW9uICgpIHsKCgogICAgICBtYXJrQWxsTWVzc2FnZVJlYWQoKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgaWYgKAogICAgICAgICAgICByZXNwb25zZSAhPSBudWxsICYmCiAgICAgICAgICAgIHJlc3BvbnNlLmNvZGUgPT09IDAgJiYKICAgICAgICAgICAgcmVzcG9uc2UubWVzc2FnZSA9PT0gInN1Y2Nlc3MiCiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgICAgICB0aGlzLmxvYWRVc2VyTWVzc2FnZSh0aGlzLmN1cnJlbnRQYWdlLCB0aGlzLnBhZ2VOdW1iZXIpOwogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgibWFrZUFsbE1zZ1JlYWQiLCAiYWxsIG1lc3NhZ2UgcmVhZGVkIik7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKTsKICAgIH0sIDUwMCksCgogICAgbWFya09uY2VSZWFkKG1lc3NhZ2UpIHsKICAgICAgbWFya01lc3NhZ2VSZWFkT25lKG1lc3NhZ2UuaWQpCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIHJlc3BvbnNlICE9IG51bGwgJiYKICAgICAgICAgICAgcmVzcG9uc2UuY29kZSA9PT0gMCAmJgogICAgICAgICAgICByZXNwb25zZS5tZXNzYWdlID09PSAic3VjY2VzcyIKICAgICAgICAgICkgewogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgibWFya1NpbmdsZVJlYWQiLCAib25lIG1lc3NhZ2UgcmVhZGVkIik7CiAgICAgICAgICAgIG1lc3NhZ2UuaXNSZWFkID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgpOwogICAgfSwKCiAgICBsb2FkVXNlck1lc3NhZ2UocGFnZU51bSwgcGFnZVNpemUpIHsKICAgICAgZ2V0VXNlck1lc3NhZ2VMaXN0KHBhZ2VOdW0sIHBhZ2VTaXplKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdGhpcy5maWxsRGF0YXMocmVzcG9uc2UpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKCk7CiAgICB9LAoKICAgIGZpbGxEYXRhcyhyZXNwb25zZSkgewogICAgICBjb25zb2xlLmRlYnVnKCJyZXNwb25lIiArIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CiAgICAgIGlmICgKICAgICAgICByZXNwb25zZSA9PSBudWxsIHx8CiAgICAgICAgcmVzcG9uc2UuZGF0YSA9PSBudWxsIHx8CiAgICAgICAgcmVzcG9uc2UuZGF0YS5sZW5ndGggPT0gMAogICAgICApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UrKzsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IG1lc3NhZ2UgPSByZXNwb25zZS5kYXRhW2ldOwogICAgICAgIGxldCBkYXRlID0gbWVzc2FnZS5vcGVyYXRpb25UaW1lLnNwbGl0KCIgIik7CiAgICAgICAgbGV0IGtleSA9ICIiOwogICAgICAgIGNvbnNvbGUubG9nKCIjIyMjIyMjIyBkYXRlID09PT09PT09PT4gIyMjIyMjIyAiICsgSlNPTi5zdHJpbmdpZnkoZGF0ZSkpOwogICAgICAgIGlmIChkYXRlICE9IG51bGwgJiYgdHlwZW9mIGtleSAhPSB1bmRlZmluZWQgJiYgZGF0ZS5sZW5ndGggPj0gMikgewogICAgICAgICAga2V5ID0gZGF0ZVswXTsKICAgICAgICAgIG1lc3NhZ2UudGltZSA9IGRhdGVbMV07CiAgICAgICAgICBtZXNzYWdlLnByZWZpeFRpbWUgPSBrZXk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGtleSA9IG1lc3NhZ2Uub3BlcmF0aW9uVGltZTsKICAgICAgICB9CiAgICAgICAgaWYgKGtleSAhPSBudWxsICYmIHR5cGVvZiBrZXkgIT0gdW5kZWZpbmVkICYmIGtleSAhPSAiIikgewogICAgICAgICAgbGV0IGxpc3QgPSB0aGlzLm1lc3NhZ2VNYXAuZ2V0KGtleSk7CiAgICAgICAgICBpZiAobGlzdCA9PSBudWxsIHx8IHR5cGVvZiBsaXN0ID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBsaXN0ID0gW107CiAgICAgICAgICB9CiAgICAgICAgICBtZXNzYWdlLmNvbG9yID0gbWVzc2FnZS5pc1JlYWQgPyAiZ3JleSIgOiAicmVkIjsKICAgICAgICAgIG1lc3NhZ2UuY2FyZENvbG9yID0gbWVzc2FnZS5pc1JlYWQgPyAiZ3JleSIgOiAiYmx1ZS1ncmV5IjsKICAgICAgICAgIC8vLS0tLS0gbW9jayBlZmZlY3QgLS0tLQogICAgICAgICAgLy9tZXNzYWdlLmNvbG9yID0gaSAlIDIgPT09IDAgPyAiZ3JleSIgOiAicmVkIjsKICAgICAgICAgIC8vbWVzc2FnZS5jYXJkQ29sb3IgPSBpICUgMiA9PT0gMCA/ICJncmV5IiA6ICJpbmRpZ28iOwogICAgICAgICAgLy9tZXNzYWdlLmlzUmVhZCA9IGkgJSAyID09PSAwID8gdHJ1ZSA6IGZhbHNlOwogICAgICAgICAgLy8tLS0tLSBtb2NrIGVmZmVjdCAtLS0tCiAgICAgICAgICBtZXNzYWdlLnR5cGVUZXh0ID0gZ2V0TXNnUmVtaW5kZXJTdGF0dXNEZXNjKG1lc3NhZ2Uub3BlcmF0aW9uKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJ0eXBlVGV4dCA9PT09PT09PT09PiIgKyBtZXNzYWdlLmNvbG9yKTsKICAgICAgICAgIGxpc3QucHVzaChtZXNzYWdlKTsKICAgICAgICAgIHRoaXMubWVzc2FnZU1hcC5zZXQoa2V5LCBsaXN0KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5tZXNzYWdlRGF0ZXMgPSBBcnJheS5mcm9tKHRoaXMubWVzc2FnZU1hcC5rZXlzKCkpOwogICAgICAvL2FsZXJ0KCJvbiByZXNwb25zZSBsZW5ndGggPj4+PiAiK0FycmF5LmZyb20odGhpcy5tZXNzYWdlRGF0ZXMpLmxlbmd0aCkKICAgIH0sCiAgfSwKCiAgLy9TZXQgdGhlIGxlbmd0aCBvZiBhIHBhcmFncmFwaAogIGZpbHRlcnM6IHsKICAgIGxlbmd0aCh0ZXh0LCBsZW5ndGgsIHN1ZmZpeCA9ICIuLi4iKSB7CiAgICAgIGlmICghdGV4dCkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAodGV4dC5sZW5ndGggPD0gbGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIHRleHQ7CiAgICAgIH0KICAgICAgcmV0dXJuICh0ZXh0ICsgIiIpLnJlcGxhY2UoL1xuL2csICI8YnIvPiIpLnN1YnN0cmluZygwLCBsZW5ndGgpICsgc3VmZml4OwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["messageCenter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"messageCenter.vue","sourceRoot":"src/views/page","sourcesContent":["<template>\n  <v-container fluid class=\"ml-0 mx-auto\">\n    <v-card class=\"mx-auto blue\">\n      <v-list two-line>\n        <v-card-actions>\n          <v-btn\n            v-if=\"messageDates.length > 0\"\n            min-width=\"105px\"\n            height=\"36px\"\n            depressed\n            dark\n            outlined\n            color=\"#1867C0FF\"\n            style=\"margin-left: 8px; margin-top: 1px\"\n            @click=\"markAllRead\"\n            >全部已读</v-btn\n          >\n        </v-card-actions>\n        <v-subheader\n          class=\"subtitle-1 my-n2\"\n          v-text=\"'还没有任何消息'\"\n          v-if=\"messageDates.length === 0\"\n        />\n\n        <template v-for=\"date in messageDates\">\n          <v-subheader\n            class=\"subtitle-2 my-n2\"\n            :key=\"date\"\n            v-text=\"date\"\n          ></v-subheader>\n          <template v-for=\"msg in messageMap.get(date)\">\n            <v-row :key=\"msg.id\">\n              <v-list-item class=\"item\">\n                <v-list-item-content @click=\"toDetail(msg)\">\n                  <v-row class=\"message-list-text\">\n                    <span class=\"mt-n2\" v-if=\"msg.isRead === false\">\n                      <v-icon large color=\"red darken-3\"\n                        >mdi-circle-small</v-icon\n                      >\n                    </span>\n                    <span class=\"ml-9\" v-else></span>\n                    <span class=\"ml-2 message-list-releasetime-text\"\n                      >{{ msg.releaseTime }}\n                    </span>\n                    <span class=\"ml-2 message-list-time-text\">{{\n                      msg.time\n                    }}</span>\n                    <span class=\"ml-2 message-list-time-text\">{{\n                      msg.operator\n                    }}</span>\n                    <span class=\"ml-2 message-list-operate-type-text\"\n                      >{{ msg.typeText }} </span\n                    ><a class=\"ml-3 message-list-title-text\"\n                      >{{ msg.messageTitle }}\n                    </a>\n                  </v-row>\n                  <v-divider class=\"my-sm-auto\"></v-divider>\n                </v-list-item-content>\n              </v-list-item>\n            </v-row>\n          </template>\n        </template>\n      </v-list>\n    </v-card>\n    <page-loader @onLoadMore=\"onLoadMore\" />\n  </v-container>\n</template>\n\n<script>\nimport {\n  getUserMessageList,\n  markAllMessageRead,\n  markMessageReadOne,\n} from \"@/api/getData.js\";\nimport { jumpToDetail } from \"@/utils/common.js\";\nimport { getMsgReminderStatusDesc } from \"@/utils/articleUtils.js\";\nimport { EventBus } from \"@/utils/event-bus\";\nimport { Debounce } from \"@/utils/tools.js\";\nexport default {\n  mounted() {\n    //初始化..... 需要吗？\n    this.messageMap = new Map();\n    this.messageDates = [];\n    this.currentPage = 1;\n    this.loadUserMessage(this.currentPage, this.pageNumber);\n    EventBus.$emit(\"refreshUnread\", \"refresh\");\n  },\n  components: {\n    pageLoader: () => import(\"./articleList/pageLoader.vue\"),\n  },\n  data: () => ({\n    messageMap: new Map(),\n    messageDates: [],\n    pageNumber: 10,\n    currentPage: 1,\n  }),\n  methods: {\n    reset() {\n      this.messageMap = new Map();\n      this.messageDates = [];\n      this.currentPage = 1;\n    },\n\n    getColor(msgStatus) {\n      if (msgStatus === \"0\") return \"#999999\";\n      else if (msgStatus === \"4\") return \"#F44336\";\n      else if (msgStatus === \"-1\") return \"#1867C0\";\n      else return \"#1867C0\";\n    },\n\n    //go to article detail page\n    toDetail(message) {\n      jumpToDetail(this.$router, message.messageId);\n      if (message.isRead === false) {\n        this.markOnceRead(message);\n      }\n    },\n\n    onLoadMore() {\n      if (this.loading == true) return;\n      this.loading = true;\n      this.loadUserMessage(this.currentPage, this.pageNumber);\n    },\n\n    markAllRead: Debounce(function () {\n\n\n      markAllMessageRead()\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            this.reset();\n            this.loadUserMessage(this.currentPage, this.pageNumber);\n            EventBus.$emit(\"makeAllMsgRead\", \"all message readed\");\n          }\n        })\n        .catch();\n    }, 500),\n\n    markOnceRead(message) {\n      markMessageReadOne(message.id)\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            EventBus.$emit(\"markSingleRead\", \"one message readed\");\n            message.isRead = true;\n          }\n        })\n        .catch();\n    },\n\n    loadUserMessage(pageNum, pageSize) {\n      getUserMessageList(pageNum, pageSize)\n        .then((response) => {\n          this.fillDatas(response);\n        })\n        .catch();\n    },\n\n    fillDatas(response) {\n      console.debug(\"respone\" + JSON.stringify(response));\n      if (\n        response == null ||\n        response.data == null ||\n        response.data.length == 0\n      ) {\n        return;\n      }\n      this.loading = false;\n      this.currentPage++;\n      for (let i = 0; i < response.data.length; i++) {\n        let message = response.data[i];\n        let date = message.operationTime.split(\" \");\n        let key = \"\";\n        console.log(\"######## date =========> ####### \" + JSON.stringify(date));\n        if (date != null && typeof key != undefined && date.length >= 2) {\n          key = date[0];\n          message.time = date[1];\n          message.prefixTime = key;\n        } else {\n          key = message.operationTime;\n        }\n        if (key != null && typeof key != undefined && key != \"\") {\n          let list = this.messageMap.get(key);\n          if (list == null || typeof list == undefined) {\n            list = [];\n          }\n          message.color = message.isRead ? \"grey\" : \"red\";\n          message.cardColor = message.isRead ? \"grey\" : \"blue-grey\";\n          //----- mock effect ----\n          //message.color = i % 2 === 0 ? \"grey\" : \"red\";\n          //message.cardColor = i % 2 === 0 ? \"grey\" : \"indigo\";\n          //message.isRead = i % 2 === 0 ? true : false;\n          //----- mock effect ----\n          message.typeText = getMsgReminderStatusDesc(message.operation);\n          console.log(\"typeText ==========>\" + message.color);\n          list.push(message);\n          this.messageMap.set(key, list);\n        }\n      }\n      this.messageDates = Array.from(this.messageMap.keys());\n      //alert(\"on response length >>>> \"+Array.from(this.messageDates).length)\n    },\n  },\n\n  //Set the length of a paragraph\n  filters: {\n    length(text, length, suffix = \"...\") {\n      if (!text) {\n        return;\n      }\n      if (text.length <= length) {\n        return text;\n      }\n      return (text + \"\").replace(/\\n/g, \"<br/>\").substring(0, length) + suffix;\n    },\n  },\n};\n</script>\n<style scoped>\n.message-list-text {\n  font-family: PingFang SC;\n  font-weight: semibold;\n  font-size: 14px !important;\n  line-height: 20px;\n  letter-spacing: 0px;\n  text-align: left;\n}\n.message-list-releasetime-text {\n  opacity: 0.800000011920929;\n  color: #333333;\n}\n.message-list-time-text {\n  color: #666666;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-operate-type-text {\n  color: #333333;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-title-text {\n  color: #1867c0;\n  font-family: Roboto;\n  font-weight: regular;\n}\n</style>"]}]}