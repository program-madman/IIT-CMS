{"remainingRequest":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/views/page/publishArticle/index.vue?vue&type=template&id=5be11380&","dependencies":[{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/views/page/publishArticle/index.vue","mtime":1641641123792},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtY29udGFpbmVyIiwKICAgIHsgc3RhdGljQ2xhc3M6ICJwYS0wIHB1Ymxpc2hfY29udGVudCIsIGF0dHJzOiB7IGZsdWlkOiAiIiB9IH0sCiAgICBbCiAgICAgIF9jKCJ0aXRsZS1lZGl0b3IiLCB7CiAgICAgICAgYXR0cnM6IHsgImVycm9yLW1lc3NhZ2VzIjogX3ZtLnRpdGxlRXJyb3JNZXNzYWdlIH0sCiAgICAgICAgbW9kZWw6IHsKICAgICAgICAgIHZhbHVlOiBfdm0udGl0bGUsCiAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgIF92bS50aXRsZSA9ICQkdgogICAgICAgICAgfSwKICAgICAgICAgIGV4cHJlc3Npb246ICJ0aXRsZSIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygiYXBwLWVkaXRvciIsIHsKICAgICAgICByZWY6ICJlZGl0b3IiLAogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICB2YWx1ZTogX3ZtLmNvbnRlbnQsCiAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgIF92bS5jb250ZW50ID0gJCR2CiAgICAgICAgICB9LAogICAgICAgICAgZXhwcmVzc2lvbjogImNvbnRlbnQiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImFwcGVuZC1jb250ZW50IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYXBwZW5kaXggbXQtNCBtbC01IG1yLTUiLAogICAgICAgICAgICAgIGF0dHJzOiB7IGhlaWdodDogIjE4cHgiIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS0wIG1hLTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHBsYWluOiAiIiwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiIiwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogIiMxODY3YzBmZiIsCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS52b3RlLmVuYWJsZSwKICAgICAgICAgICAgICAgICAgICByaXBwbGU6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4cHgiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgX3ZtLnZvdGVEaWFsb2cgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1pY29uIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhlaWdodDogIjE2cHgiLCB3aWR0aDogIjE2cHgiLCBsZWZ0OiAiIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIG1kaS12b3RlLW91dGxpbmUgIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIOa3u+WKoOaKleelqCAiKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1sLTQgbXItNCBkaXZpZGVyIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHZlcnRpY2FsOiAiIiB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTAgbWEtMCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgcGxhaW46ICIiLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICIiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzE4NjdjMGZmIiwKICAgICAgICAgICAgICAgICAgICByaXBwbGU6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4cHgiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udXBsb2FkRmlsZU4gfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBoZWlnaHQ6ICIxNnB4Iiwgd2lkdGg6ICIxNnB4IiwgbGVmdDogIiIgfSB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBtZGktcGFwZXJjbGlwICIpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIiDmt7vliqDpmYTku7YgIiksCiAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICByZWY6ICJ1cGxvYWRGaWxlTiIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJmaWxlIiwKICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlOiAibXVsdGlwbGUiLAogICAgICAgICAgICAgICAgICAgICAgYWNjZXB0OiBfdm0uaW5wdXRGaWxlQWNjZXB0LAogICAgICAgICAgICAgICAgICAgICAgaGlkZGVuOiAiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZmlsZVVwbG9hZCgkZXZlbnQsIGZhbHNlKQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBfdm0ucmVzZXRVcGxvYWRlck4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWwtNCBtci00IGRpdmlkZXIiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgdmVydGljYWw6ICIiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGEtMCBtYS0wIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBwbGFpbjogIiIsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjMTg2N2MwZmYiLAogICAgICAgICAgICAgICAgICAgIHJpcHBsZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMThweCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS51cGxvYWRGaWxlRCB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1pY29uIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhlaWdodDogIjE2cHgiLCB3aWR0aDogIjE2cHgiLCBsZWZ0OiAiIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIG1kaS1wYXBlcmNsaXAgIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIOa3u+WKoOWumuWQkemZhOS7tiAiKSwKICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIHJlZjogInVwbG9hZEZpbGVEIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogImZpbGUiLAogICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGU6ICJtdWx0aXBsZSIsCiAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ6IF92bS5pbnB1dEZpbGVBY2NlcHQsCiAgICAgICAgICAgICAgICAgICAgICBoaWRkZW46ICIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IF92bS5yZXNldFVwbG9hZGVyRCwKICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZmlsZVVwbG9hZCgkZXZlbnQsIHRydWUpCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImFwcGVuZGl4LWhpbnQiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIuWumuWQkemZhOS7tuaWh+S7tuWQjeagvOW8j+WmguS4i++8mls3MDEwMTAxMF0qKioqKioqKioqKioqKioqKirvvIzkuK3mi6zlj7fkuK3kuLrlj5HpgIHnu4/plIDllYbku6PnoIEiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1kaWFsb2ciLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgIm1pbi13aWR0aCI6ICI1NDZweCIgfSwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgd2lkdGg6ICI1NDYiLAogICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS52b3RlLmVuYWJsZSwKICAgICAgICAgICAgICAgIHBlcnNpc3RlbnQ6IHRydWUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnZvdGVEaWFsb2csCiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgIF92bS52b3RlRGlhbG9nID0gJCR2CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInZvdGVEaWFsb2ciCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFtfYygic3BhbiIsIFtfdm0uX3YoIua3u+WKoOaKleelqCIpXSldKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtZm9ybSIsCiAgICAgICAgICAgICAgICAgICAgeyByZWY6ICJmb3JtIiwgYXR0cnM6IHsgImxhenktdmFsaWRhdGlvbiI6ICIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygidm90ZS1vcHRpb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWwtNyBtci03IiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuivt+i+k+WFpeaKleelqOS4u+mimCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiAi5oqV56Wo5Li76aKY5LiN6IO95Li656m6IgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udm90ZVRlbXAudG9waWMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnZvdGVUZW1wLCAidG9waWMiLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidm90ZVRlbXAudG9waWMiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibXQtNiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS52b3RlVGVtcC52b3RlT3B0aW9ucywgZnVuY3Rpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgICBoaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJ2b3RlLW9wdGlvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXmipXnpajlhoXlrrkiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGluZGV4ID4gMSA/IG51bGwgOiAi5oqV56Wo5YaF5a655LiN6IO95Li656m6IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlRGVsZXRlOiBoaW5kZXggPiAxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhsZW5ndGg6IDgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkRlbGV0ZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kZWxldGVJdGVtKGhpbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoaXRlbSwgInZhbHVlIiwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiaXRlbS52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInZvdGUtb3B0aW9uIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnZvdGVUZW1wLnZvdGVPcHRpb25zLmxlbmd0aCA8IDEwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInZvdGVUZW1wLnZvdGVPcHRpb25zLmxlbmd0aCA8IDEwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS0wIG1hLTAgbWwtOCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhaW46ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpcHBsZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjMTg2N2MwZmYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4cHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uYWRkSXRlbSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1pY29uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxNnB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxNnB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogIiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBtZGktcGx1cy1jaXJjbGUtb3V0bGluZSAiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg5re75Yqg5oqV56Wo6YCJ6aG5ICIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWwtNyBtdC01IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigi5oqV56Wo5oiq5q2i5pe26Ze0IikKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJ0aW1lLXBpY2tlciIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBtaW5UaW1lOiBuZXcgRGF0ZSgpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udm90ZVRlbXAuZW5kVGltZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnZvdGVUZW1wLCAiZW5kVGltZSIsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidm90ZVRlbXAuZW5kVGltZSIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi10ZXh0LWZpZWxkIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0aXRsZSB0aW1lX2lucHV0IG1sLTcgbXQtMiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAiaW5saW5lLWZsZXgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjQ1NXB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi5oqV56Wo57uT5p2f5pe26Ze0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImhpZGUtZGV0YWlscyI6ICJhdXRvIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNpbmdsZS1saW5lIjogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aDogIjQwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVsZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbih2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEhdmFsdWUgfHwgIuaKleelqOe7k+adn+aXtumXtOS4jeiDveS4uuepuiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYXBwZW5kLWljb24iOiAibWRpLW1lbnUtZG93biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiAiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udm90ZVRlbXAuZW5kVGltZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS52b3RlVGVtcCwgImVuZFRpbWUiLCAkJHYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ2b3RlVGVtcC5lbmRUaW1lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE2cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTZweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtYXJnaW4tbGVmdCI6ICIxM3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiICoiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAibWFyZ2luLXRvcCI6ICIyNHB4IiwgaGVpZ2h0OiAiNjBweCIgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtYXJnaW4tbGVmdCI6ICIxNTdweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1yaWdodCI6ICIyNHB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtaW4td2lkdGgiOiAiMTA1cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjM2cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcHJlc3NlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFyazogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzE4NjdDMEZGIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmNhbmNsZVZvdGVFZGl0IH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg5Y+W5raIICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtaW4td2lkdGgiOiAiMTA1cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjM2cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcHJlc3NlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFyazogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJibHVlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnZvdGVTYXZlIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg56Gu6K6kICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF92bS52b3RlLmVuYWJsZQogICAgICAgICAgICA/IF9jKCJ2b3RlIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtbC01IG10LTQiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgdm90ZTogX3ZtLnZvdGUgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIG9uRGVsZXRlOiBfdm0ub25Wb3RlRGVsZXRlLAogICAgICAgICAgICAgICAgICBvblVwZGF0ZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLnZvdGVEaWFsb2cgPSB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtbC01IG10LTQgbXItNSIgfSwgWwogICAgICAgICAgICBfdm0udXBsb2FkRmlsZU5vcm1hbC5sZW5ndGggPiAwCiAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWEtMCBwYS0wIiB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJmaWxlcy1jYXRlZ29yeSBtci02IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIiDmma7pgJrpmYTku7YoIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0udXBsb2FkRmlsZU5vcm1hbC5sZW5ndGgpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIikgIgogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS0wIG1hLTAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVwcmVzc2VkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhaW46ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjMTg2N2MwZmYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaXBwbGU6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIyMHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1pbi13aWR0aCI6ICIyNHB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ucmVtb3ZlQWxsVXBsb2FkRmlsZU5vcm1hbCB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg5YWo6YOo5Yig6ZmkICIpXQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAidi1yb3ciLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTAgbWEtMCBtdC0yIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgIm5vLWd1dHRlcnMiOiAiIiB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS51cGxvYWRGaWxlTm9ybWFsLCBmdW5jdGlvbihpdGVtLCBoaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJmaWxlLWl0ZW0iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBoaW5kZXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS0wIG1yLTQgZmlsZS1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBhcEZpbGU6IGl0ZW0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EZWxldGU6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm9uRGVsZXRlRmlsZShoaW5kZXgsIGZhbHNlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgIF92bS51cGxvYWRGaWxlRGlyZWN0Lmxlbmd0aCA+IDAKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInYtcm93IiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0wIG10LTQgcGEtMCIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGFsaWduOiAiY2VudGVyIiB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJmaWxlcy1jYXRlZ29yeSBtci02IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIuWumuWQkemZhOS7tigiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS51cGxvYWRGaWxlRGlyZWN0Lmxlbmd0aCkgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKSIKICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGEtMCBtYS0wIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcHJlc3NlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWluOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzE4NjdjMGZmIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlwcGxlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMjBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtaW4td2lkdGgiOiAiMjRweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnJlbW92ZUFsbERpcmVjdGlvbkZpbGVOb3JtYWwgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIOWFqOmDqOWIoOmZpCAiKV0KICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInYtcm93IiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwYS0wIG1hLTAgbXQtMiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJuby1ndXR0ZXJzIjogIiIgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0udXBsb2FkRmlsZURpcmVjdCwgZnVuY3Rpb24oaXRlbSwgaGluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygiZmlsZS1pdGVtIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGEtMCBtci00IGZpbGUtaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgYXBGaWxlOiBpdGVtIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5vbkRlbGV0ZUZpbGUoaGluZGV4LCB0cnVlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgIF0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY1N0eWxlOiB7IGhlaWdodDogIjEyOHB4IiwgZGlzcGxheTogImJsb2NrIiB9IH0pLAogICAgICBfYygKICAgICAgICAidi1mb290ZXIiLAogICAgICAgIHsgYXR0cnM6IHsgcGFkbGVzczogIiIsIGZpeGVkOiAiIiwgaGVpZ2h0OiAiNjQiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygidi1zcGFjZXIiKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci02IiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgIm1pbi13aWR0aCI6ICIxMDVweCIsCiAgICAgICAgICAgICAgICBvdXRsaW5lZDogIiIsCiAgICAgICAgICAgICAgICBkZXByZXNzZWQ6ICIiLAogICAgICAgICAgICAgICAgZGFyazogIiIsCiAgICAgICAgICAgICAgICBjb2xvcjogIiMxODY3QzBGRiIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc2F2ZUFydGljbGUgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIg5L+d5a2YICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci02IiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgd2lkdGg6ICIxMDVweCIsCiAgICAgICAgICAgICAgICBoZWlnaHQ6ICIzNnB4IiwKICAgICAgICAgICAgICAgIG91dGxpbmVkOiAiIiwKICAgICAgICAgICAgICAgIGRlcHJlc3NlZDogIiIsCiAgICAgICAgICAgICAgICBkYXJrOiAiIiwKICAgICAgICAgICAgICAgIGNvbG9yOiAiIzE4NjdDMEZGIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgX3ZtLm9wZW5QcmV2aWV3KCkKICAgICAgICAgICAgICAgICAgX3ZtLmNsb3NlU25hY2soKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiIOmihOiniCAiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItOCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICJtaW4td2lkdGgiOiAiMTA1cHgiLAogICAgICAgICAgICAgICAgZGVwcmVzc2VkOiAiIiwKICAgICAgICAgICAgICAgIGRhcms6ICIiLAogICAgICAgICAgICAgICAgY29sb3I6ICJibHVlIgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgX3ZtLnB1Ymxpc2hBcnRpY2xlKCkKICAgICAgICAgICAgICAgICAgX3ZtLmNsb3NlU25hY2soKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiIOWPkeW4gyAiKV0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoInByZXZpZXciLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIG9wZW46IF92bS5wcmV2aWV3ICYmIF92bS4kcm91dGUucGF0aCA9PSAiL3B1Ymxpc2hBcnRpY2xlIiwKICAgICAgICAgIHVwbG9hZEZpbGVEaXJlY3Q6IF92bS51cGxvYWRGaWxlRGlyZWN0LAogICAgICAgICAgdXBsb2FkRmlsZU5vcm1hbDogX3ZtLnVwbG9hZEZpbGVOb3JtYWwsCiAgICAgICAgICB2b3RlOiBfdm0udm90ZSwKICAgICAgICAgIHRpdGxlOiBfdm0udGl0bGUsCiAgICAgICAgICBjb250ZW50OiBfdm0uY29udGVudAogICAgICAgIH0sCiAgICAgICAgb246IHsKICAgICAgICAgIGNsb3NlRGlhbG9nOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgX3ZtLnByZXZpZXcgPSBmYWxzZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJwdWJsaXNoIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBvcGVuOiBfdm0ucHVibGlzaCAmJiBfdm0uJHJvdXRlLnBhdGggPT0gIi9wdWJsaXNoQXJ0aWNsZSIsCiAgICAgICAgICBpZDogX3ZtLmlkLAogICAgICAgICAgdm90ZUVuYWJsZTogX3ZtLnZvdGUuZW5hYmxlLAogICAgICAgICAgZGVhbGVyOiBfdm0uZGVsZWFyTGlzdAogICAgICAgIH0sCiAgICAgICAgb246IHsKICAgICAgICAgIGNsb3NlRGlhbG9nOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgX3ZtLnB1Ymxpc2ggPSBmYWxzZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJjb25maXJtIiwgeyByZWY6ICJjb25maXJtIiB9KQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}