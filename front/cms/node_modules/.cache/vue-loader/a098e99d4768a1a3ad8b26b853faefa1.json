{"remainingRequest":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/views/page/articleDetail.vue?vue&type=template&id=6c883981&","dependencies":[{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/views/page/articleDetail.vue","mtime":1641641123789},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}