{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue","mtime":1638535925252},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0VXNlck1lc3NhZ2VMaXN0LG1hcmtBbGxNZXNzYWdlUmVhZCxtYXJrTWVzc2FnZVJlYWRPbmUsfSBmcm9tICJAL2FwaS9nZXREYXRhLmpzIjsKaW1wb3J0IHsgc2hvd01zZ1RleHQgfSBmcm9tICJAL3V0aWxzL2NvbW1vbi5qcyI7CmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiQC91dGlscy9ldmVudC1idXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbW91bnRlZCgpIHsKICAgIC8v5Yid5aeL5YyWLi4uLi4g6ZyA6KaB5ZCX77yfCiAgICB0aGlzLm1lc3NhZ2VNYXAgPSBuZXcgTWFwKCk7CiAgICB0aGlzLm1lc3NhZ2VEYXRlcyA9IFtdOwogICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICB0aGlzLmxvYWRVc2VyTWVzc2FnZSh0aGlzLmN1cnJlbnRQYWdlLCB0aGlzLnBhZ2VOdW1iZXIpOwogIH0sCiAgY29tcG9uZW50czogewogICAgcGFnZUxvYWRlcjogKCkgPT4gaW1wb3J0KCIuL2FydGljbGVMaXN0L3BhZ2VMb2FkZXIudnVlIiksCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgbWVzc2FnZU1hcDogbmV3IE1hcCgpLAogICAgbWVzc2FnZURhdGVzOiBbXSwKICAgIHBhZ2VOdW1iZXI6IDEwLAogICAgY3VycmVudFBhZ2U6IDEsCiAgfSksCiAgbWV0aG9kczogewogICAgLy9nbyB0byBhcnRpY2xlIGRldGFpbCBwYWdlCiAgICB0b0RldGFpbChtZXNzYWdlKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtuYW1lOiAiYXJ0Y2xlRGV0YWlsIixwYXJhbXM6IHtpZDptZXNzYWdlLm1lc3NhZ2VJZH19KTsKICAgICAgaWYgKG1lc3NhZ2UuaXNSZWFkID09PSBmYWxzZSkgewogICAgICAgIHRoaXMubWFya09uY2VSZWFkKG1lc3NhZ2UpCiAgICAgIH0gIAogICAgfSwKCiAgICBvbkxvYWRNb3JlKCkgewogICAgICBpZiAodGhpcy5sb2FkaW5nID09IHRydWUpIHJldHVybjsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5sb2FkVXNlck1lc3NhZ2UodGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlTnVtYmVyKTsKICAgIH0sCgogICAgbWFya0FsbFJlYWQoKSB7CiAgICAgIG1hcmtBbGxNZXNzYWdlUmVhZCgpCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZihyZXNwb25zZSAhPSBudWxsICYmIHJlc3BvbnNlLmNvZGUgPT09MCAmJiByZXNwb25zZS5tZXNzYWdlID09PSAic3VjY2VzcyIpewogICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgibWFrZUFsbE1zZ1JlYWQiLCAiYWxsIG1lc3NhZ2UgcmVhZGVkIik7CiAgICAgICAgICB9IAogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKCk7CiAgICB9LAoKICAgIG1hcmtPbmNlUmVhZChtZXNzYWdlKSB7CiAgICAgIG1hcmtNZXNzYWdlUmVhZE9uZShtZXNzYWdlLmlkKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgaWYocmVzcG9uc2UgIT0gbnVsbCAmJiByZXNwb25zZS5jb2RlID09PTAgJiYgcmVzcG9uc2UubWVzc2FnZSA9PT0gInN1Y2Nlc3MiKXsKICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoIm1hcmtTaW5nbGVSZWFkIiwgIm9uZSBtZXNzYWdlIHJlYWRlZCIpOwogICAgICAgICAgICBtZXNzYWdlLmlzUmVhZCA9IHRydWU7CiAgICAgICAgICB9ICAKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgpOwogICAgfSwKCiAgICAvL3NldCBhbGwgdW5yZWFkIGFydGljbGVzIGFzIHJlYWQuCiAgICBhbGxSZWFkKCkgewogICAgICBjb25zb2xlLmxvZygic2V0IGFsbCBtZXNzYWdlIGFzIHJlYWQiKTsKICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaXRlbS5pbmZvLmZvckVhY2goKGkpID0+IHsKICAgICAgICAgIGkucmVhZFN0YXR1cyA9IDE7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKCiAgICBsb2FkVXNlck1lc3NhZ2UocGFnZU51bSwgcGFnZVNpemUpIHsKICAgICAgZ2V0VXNlck1lc3NhZ2VMaXN0KHBhZ2VOdW0sIHBhZ2VTaXplKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdGhpcy5maWxsRGF0YXMocmVzcG9uc2UpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKCk7CiAgICB9LAoKICAgIGZpbGxEYXRhcyhyZXNwb25zZSkgewogICAgICBjb25zb2xlLmRlYnVnKCJyZXNwb25lIiArIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CiAgICAgIGlmICgKICAgICAgICByZXNwb25zZSA9PSBudWxsIHx8CiAgICAgICAgcmVzcG9uc2UuZGF0YSA9PSBudWxsIHx8CiAgICAgICAgcmVzcG9uc2UuZGF0YS5sZW5ndGggPT0gMAogICAgICApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UrKzsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IG1lc3NhZ2UgPSByZXNwb25zZS5kYXRhW2ldOwogICAgICAgIGxldCBkYXRlID0gbWVzc2FnZS5vcGVyYXRpb25UaW1lLnNwbGl0KCIgIik7CiAgICAgICAgbGV0IGtleSA9ICIiOwogICAgICAgIGNvbnNvbGUubG9nKCIjIyMjIyMjIyBkYXRlID09PT09PT09PT4gIyMjIyMjIyAiICsgSlNPTi5zdHJpbmdpZnkoZGF0ZSkpOwogICAgICAgIGlmIChkYXRlICE9IG51bGwgJiYgdHlwZW9mIGtleSAhPSB1bmRlZmluZWQgJiYgZGF0ZS5sZW5ndGggPj0gMikgewogICAgICAgICAga2V5ID0gZGF0ZVswXTsKICAgICAgICAgIG1lc3NhZ2UudGltZSA9IGRhdGVbMV07CiAgICAgICAgICBtZXNzYWdlLnByZWZpeFRpbWUgPSBrZXk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGtleSA9IG1lc3NhZ2Uub3BlcmF0aW9uVGltZTsKICAgICAgICB9CiAgICAgICAgaWYgKGtleSAhPSBudWxsICYmIHR5cGVvZiBrZXkgIT0gdW5kZWZpbmVkICYmIGtleSAhPSAiIikgewogICAgICAgICAgbGV0IGxpc3QgPSB0aGlzLm1lc3NhZ2VNYXAuZ2V0KGtleSk7CiAgICAgICAgICBpZiAobGlzdCA9PSBudWxsIHx8IHR5cGVvZiBsaXN0ID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBsaXN0ID0gW107CiAgICAgICAgICB9CgogICAgICAgICAgbWVzc2FnZS50eXBlVGV4dCA9IHNob3dNc2dUZXh0KG1lc3NhZ2Uub3BlcmF0aW9uKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJ0eXBlVGV4dCA9PT09PT09PT09PiIgKyBtZXNzYWdlLnR5cGVUZXh0KTsKICAgICAgICAgIGxpc3QucHVzaChtZXNzYWdlKTsKICAgICAgICAgIHRoaXMubWVzc2FnZU1hcC5zZXQoa2V5LCBsaXN0KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5tZXNzYWdlRGF0ZXMgPSB0aGlzLm1lc3NhZ2VNYXAua2V5cygpOwogICAgICAvL2FsZXJ0KCJvbiByZXNwb25zZSBsZW5ndGggPj4+PiAiK0FycmF5LmZyb20odGhpcy5tZXNzYWdlRGF0ZXMpLmxlbmd0aCkKICAgIH0sCiAgfSwKCiAgLy9TZXQgdGhlIGxlbmd0aCBvZiBhIHBhcmFncmFwaAogIGZpbHRlcnM6IHsKICAgIGxlbmd0aCh0ZXh0LCBsZW5ndGgsIHN1ZmZpeCA9ICIuLi4iKSB7CiAgICAgIGlmICghdGV4dCkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAodGV4dC5sZW5ndGggPD0gbGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIHRleHQ7CiAgICAgIH0KICAgICAgcmV0dXJuICh0ZXh0ICsgIiIpLnJlcGxhY2UoL1xuL2csICI8YnIvPiIpLnN1YnN0cmluZygwLCBsZW5ndGgpICsgc3VmZml4OwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["messageCenter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"messageCenter.vue","sourceRoot":"src/views/page","sourcesContent":["<template>\n  <v-container fluid class=\"ml-0 mx-auto\">\n    <v-card class=\"mx-auto blue\">\n      <v-list two-line>\n        <v-card-actions>\n          <v-btn @click=\"markAllRead\">全部已读</v-btn>\n        </v-card-actions>\n        <template v-for=\"date in messageDates\">\n          <v-subheader\n            class=\"subtitle-2 my-n2\"\n            :key=\"date\"\n            v-text=\"date\"\n          ></v-subheader>\n          <template v-for=\"(msg, index1) in messageMap.get(date)\">\n            <v-list-item :key=\"msg.operator\">\n              <v-list-item-content @click=\"toDetail(msg)\">\n                <v-row>\n                  <span class=\"mt-n2\" v-if=\"msg.isRead === false\">\n                    <v-icon large color=\"red darken-3\">mdi-circle-small</v-icon>\n                  </span>\n                  <span class=\"ml-9\" v-else></span>\n                  <span class=\"ml-2\">\n                    {{ msg.releaseTime }}\n                  </span>\n                  <span class=\"ml-2\">{{ msg.time }}</span>\n                  <span class=\"ml-2\">\n                    {{ msg.operator }}\n                  </span>\n                  <span class=\"ml-2\">\n                    {{ msg.typeText }}\n                  </span>\n                  <a class=\"ml-3\">\n                    {{ msg.messageTitle }}\n                  </a>\n                </v-row>\n              </v-list-item-content>\n            </v-list-item>\n            <v-divider\n              class=\"my-sm-auto\"\n              v-show=\"index1 != messageMap.get(date).length - 1\"\n              :key=\"msg.messageTitle\"\n            ></v-divider>\n          </template>\n        </template>\n      </v-list>\n    </v-card>\n    <page-loader @onLoadMore=\"onLoadMore\" />\n  </v-container>\n</template>\n\n<script>\nimport {getUserMessageList,markAllMessageRead,markMessageReadOne,} from \"@/api/getData.js\";\nimport { showMsgText } from \"@/utils/common.js\";\nimport { EventBus } from \"@/utils/event-bus\";\nexport default {\n  mounted() {\n    //初始化..... 需要吗？\n    this.messageMap = new Map();\n    this.messageDates = [];\n    this.currentPage = 1;\n    this.loadUserMessage(this.currentPage, this.pageNumber);\n  },\n  components: {\n    pageLoader: () => import(\"./articleList/pageLoader.vue\"),\n  },\n  data: () => ({\n    messageMap: new Map(),\n    messageDates: [],\n    pageNumber: 10,\n    currentPage: 1,\n  }),\n  methods: {\n    //go to article detail page\n    toDetail(message) {\n      this.$router.push({name: \"artcleDetail\",params: {id:message.messageId}});\n      if (message.isRead === false) {\n        this.markOnceRead(message)\n      }  \n    },\n\n    onLoadMore() {\n      if (this.loading == true) return;\n      this.loading = true;\n      this.loadUserMessage(this.currentPage, this.pageNumber);\n    },\n\n    markAllRead() {\n      markAllMessageRead()\n        .then((response) => {\n          if(response != null && response.code ===0 && response.message === \"success\"){\n            EventBus.$emit(\"makeAllMsgRead\", \"all message readed\");\n          } \n        })\n        .catch();\n    },\n\n    markOnceRead(message) {\n      markMessageReadOne(message.id)\n        .then((response) => {\n          if(response != null && response.code ===0 && response.message === \"success\"){\n            EventBus.$emit(\"markSingleRead\", \"one message readed\");\n            message.isRead = true;\n          }  \n        })\n        .catch();\n    },\n\n    //set all unread articles as read.\n    allRead() {\n      console.log(\"set all message as read\");\n      this.items.forEach((item) => {\n        item.info.forEach((i) => {\n          i.readStatus = 1;\n        });\n      });\n    },\n\n    loadUserMessage(pageNum, pageSize) {\n      getUserMessageList(pageNum, pageSize)\n        .then((response) => {\n          this.fillDatas(response);\n        })\n        .catch();\n    },\n\n    fillDatas(response) {\n      console.debug(\"respone\" + JSON.stringify(response));\n      if (\n        response == null ||\n        response.data == null ||\n        response.data.length == 0\n      ) {\n        return;\n      }\n      this.loading = false;\n      this.currentPage++;\n      for (let i = 0; i < response.data.length; i++) {\n        let message = response.data[i];\n        let date = message.operationTime.split(\" \");\n        let key = \"\";\n        console.log(\"######## date =========> ####### \" + JSON.stringify(date));\n        if (date != null && typeof key != undefined && date.length >= 2) {\n          key = date[0];\n          message.time = date[1];\n          message.prefixTime = key;\n        } else {\n          key = message.operationTime;\n        }\n        if (key != null && typeof key != undefined && key != \"\") {\n          let list = this.messageMap.get(key);\n          if (list == null || typeof list == undefined) {\n            list = [];\n          }\n\n          message.typeText = showMsgText(message.operation);\n          console.log(\"typeText ==========>\" + message.typeText);\n          list.push(message);\n          this.messageMap.set(key, list);\n        }\n      }\n      this.messageDates = this.messageMap.keys();\n      //alert(\"on response length >>>> \"+Array.from(this.messageDates).length)\n    },\n  },\n\n  //Set the length of a paragraph\n  filters: {\n    length(text, length, suffix = \"...\") {\n      if (!text) {\n        return;\n      }\n      if (text.length <= length) {\n        return text;\n      }\n      return (text + \"\").replace(/\\n/g, \"<br/>\").substring(0, length) + suffix;\n    },\n  },\n};\n</script>"]}]}