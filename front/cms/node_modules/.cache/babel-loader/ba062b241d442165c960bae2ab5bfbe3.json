{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js??ref--13-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/timeFormate.js","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/timeFormate.js","mtime":1638103240529},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwoKLy8gZXhwb3J0IGNvbnN0IHRpbWVGb3JtYXRlID0gKHRpbWVTdGFtcCk9PiB7Ci8vICAgbGV0IHRpbWUgPSBuZXcgRGF0ZSh0aW1lU3RhbXApOwovLyAgIGxldCB5ZWFyID0gdGltZS5nZXRGdWxsWWVhcigpOwovLyAgIGxldCBtb250aCA9dGltZS5nZXRNb250aCgpICsgMSA8IDEwPyAiMCIgKyAodGltZS5nZXRNb250aCgpICsgMSk6IHRpbWUuZ2V0TW9udGgoKSArIDE7Ci8vICAgbGV0IGRhdGUgPXRpbWUuZ2V0RGF0ZSgpIDwgMTA/ICIwIiArIG5ldyBEYXRlKHRpbWVTdGFtcCkuZ2V0RGF0ZSgpOiBuZXcgRGF0ZSh0aW1lU3RhbXApLmdldERhdGUoKTsKLy8gICBsZXQgaGggPXRpbWUuZ2V0SG91cnMoKSA8IDEwPyAiMCIgKyBuZXcgRGF0ZSh0aW1lU3RhbXApLmdldEhvdXJzKCk6IG5ldyBEYXRlKHRpbWVTdGFtcCkuZ2V0SG91cnMoKTsKLy8gICBsZXQgbW0gPXRpbWUuZ2V0TWludXRlcygpIDwgMTA/ICIwIiArIG5ldyBEYXRlKHRpbWVTdGFtcCkuZ2V0TWludXRlcygpOiBuZXcgRGF0ZSh0aW1lU3RhbXApLmdldE1pbnV0ZXMoKTsKLy8gICBsZXQgc3MgPXRpbWUuZ2V0U2Vjb25kcygpIDwgMTA/ICIwIiArIG5ldyBEYXRlKHRpbWVTdGFtcCkuZ2V0U2Vjb25kcygpOiBuZXcgRGF0ZSh0aW1lU3RhbXApLmdldFNlY29uZHMoKTsKLy8gICByZXR1cm4geWVhciArICItIiArIG1vbnRoICsgIi0iICsgZGF0ZSArIiAiKyIgIitoaCsiOiIrbW0rJzonK3NzIDsKLy8gfQpEYXRlLnByb3RvdHlwZS5mb3JtYXQgPSBmdW5jdGlvbiAoZm9ybWF0KSB7CiAgdmFyIGFyZ3MgPSB7CiAgICAiTSsiOiB0aGlzLmdldE1vbnRoKCkgKyAxLAogICAgImQrIjogdGhpcy5nZXREYXRlKCksCiAgICAiaCsiOiB0aGlzLmdldEhvdXJzKCksCiAgICAibSsiOiB0aGlzLmdldE1pbnV0ZXMoKSwKICAgICJzKyI6IHRoaXMuZ2V0U2Vjb25kcygpLAogICAgInErIjogTWF0aC5mbG9vcigodGhpcy5nZXRNb250aCgpICsgMykgLyAzKSwKICAgIC8vcXVhcnRlcgogICAgIlMiOiB0aGlzLmdldE1pbGxpc2Vjb25kcygpCiAgfTsKICBpZiAoLyh5KykvLnRlc3QoZm9ybWF0KSkgZm9ybWF0ID0gZm9ybWF0LnJlcGxhY2UoUmVnRXhwLiQxLCAodGhpcy5nZXRGdWxsWWVhcigpICsgIiIpLnN1YnN0cig0IC0gUmVnRXhwLiQxLmxlbmd0aCkpOwoKICBmb3IgKHZhciBpIGluIGFyZ3MpIHsKICAgIHZhciBuID0gYXJnc1tpXTsKICAgIGlmIChuZXcgUmVnRXhwKCIoIiArIGkgKyAiKSIpLnRlc3QoZm9ybWF0KSkgZm9ybWF0ID0gZm9ybWF0LnJlcGxhY2UoUmVnRXhwLiQxLCBSZWdFeHAuJDEubGVuZ3RoID09IDEgPyBuIDogKCIwMCIgKyBuKS5zdWJzdHIoKCIiICsgbikubGVuZ3RoKSk7CiAgfQoKICByZXR1cm4gZm9ybWF0Owp9OwoKZXhwb3J0IHZhciBpc1ZhbGlkRGF0ZSA9IGZ1bmN0aW9uIGlzVmFsaWREYXRlKGRhdGUpIHsKICByZXR1cm4gZGF0ZSBpbnN0YW5jZW9mIERhdGUgJiYgIWlzTmFOKGRhdGUuZ2V0VGltZSgpKTsKfTsKZXhwb3J0IHZhciBzdHJpbmdUb0RhdGUgPSBmdW5jdGlvbiBzdHJpbmdUb0RhdGUoZGF0YVN0cmluZykgewogIHZhciBwYXR0ZXJuID0gLyhcZHs0fSkoXGR7Mn0pKFxkezJ9KShcZHsyfSkoXGR7Mn0pKFxkezJ9KS87CiAgcmV0dXJuIG5ldyBEYXRlKGRhdGFTdHJpbmcucmVwbGFjZShwYXR0ZXJuLCAnJDEvJDIvJDMgJDQ6JDU6JDYnKSk7Cn07CmV4cG9ydCB2YXIgb2Zmc2V0RGF5VGltZSA9IGZ1bmN0aW9uIG9mZnNldERheVRpbWUob2Zmc2V0KSB7CiAgcmV0dXJuIG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgb2Zmc2V0ICogMjQgKiA2MCAqIDYwICogMTAwMCk7Cn07CmV4cG9ydCB2YXIgb2Zmc2V0TW9udGhUaW1lID0gZnVuY3Rpb24gb2Zmc2V0TW9udGhUaW1lKG9mZnNldCkgewogIHZhciBjdXIgPSBuZXcgRGF0ZSgpOwogIHZhciB5ID0gY3VyLmdldEZ1bGxZZWFyKCk7CiAgdmFyIG0gPSBjdXIuZ2V0TW9udGgoKSArIG9mZnNldDsKICB2YXIgZHkgPSBtIC8gMTI7CiAgbSAlPSAxMjsKCiAgaWYgKG0gPCAwKSB7CiAgICBtICs9IDEyOwogIH0KCiAgeSA9IHkgKyBkeTsKICByZXR1cm4gbmV3IERhdGUoeSwgbSwgY3VyLmdldERhdGUoKSwgY3VyLmdldEhvdXJzKCksIGN1ci5nZXRNaW51dGVzKCksIGN1ci5nZXRTZWNvbmRzKCkpOwp9Ow=="},{"version":3,"sources":["/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/timeFormate.js"],"names":["Date","prototype","format","args","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","i","n","isValidDate","date","isNaN","getTime","stringToDate","dataString","pattern","offsetDayTime","offset","offsetMonthTime","cur","y","m","dy"],"mappings":"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","sourcesContent":["// export const timeFormate = (timeStamp)=> {\n//   let time = new Date(timeStamp);\n//   let year = time.getFullYear();\n//   let month =time.getMonth() + 1 < 10? \"0\" + (time.getMonth() + 1): time.getMonth() + 1;\n//   let date =time.getDate() < 10? \"0\" + new Date(timeStamp).getDate(): new Date(timeStamp).getDate();\n//   let hh =time.getHours() < 10? \"0\" + new Date(timeStamp).getHours(): new Date(timeStamp).getHours();\n//   let mm =time.getMinutes() < 10? \"0\" + new Date(timeStamp).getMinutes(): new Date(timeStamp).getMinutes();\n//   let ss =time.getSeconds() < 10? \"0\" + new Date(timeStamp).getSeconds(): new Date(timeStamp).getSeconds();\n//   return year + \"-\" + month + \"-\" + date +\" \"+\" \"+hh+\":\"+mm+':'+ss ;\n// }\n\nDate.prototype.format = function (format) {\n  var args = {\n    \"M+\": this.getMonth() + 1,\n    \"d+\": this.getDate(),\n    \"h+\": this.getHours(),\n    \"m+\": this.getMinutes(),\n    \"s+\": this.getSeconds(),\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //quarter\n\n    \"S\": this.getMilliseconds()\n  };\n  if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  for (var i in args) {\n    var n = args[i];\n\n    if (new RegExp(\"(\" + i + \")\").test(format)) format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? n : (\"00\" + n).substr((\"\" + n).length));\n  }\n  return format;\n};\n\nexport const isValidDate = (date)=> {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n\nexport const stringToDate = (dataString) =>{\n  var pattern = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/;\n  return new Date(dataString.replace(pattern, '$1/$2/$3 $4:$5:$6'));\n}\n\nexport const offsetDayTime = (offset) => {\n  return (new Date(new Date().getTime() + offset * 24 * 60 * 60 * 1000));\n}\n\nexport const offsetMonthTime = (offset) => {\n  let cur = new Date();\n  var y = cur.getFullYear();\n  var m = cur.getMonth()+offset;\n  var dy = m / 12;\n  m %= 12;\n  if(m < 0 ){\n    m += 12;\n  }\n  y = y +dy;\n  return new Date(y, m, cur.getDate(), cur.getHours(), cur.getMinutes(), cur.getSeconds());\n}"]}]}