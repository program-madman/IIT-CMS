{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/thread-loader/dist/cjs.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/articleManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/articleManagement.vue","mtime":1640860161657},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBqdW1wVG9EZXRhaWwsIGp1bXBUb0RldGFpbFdpdGhQYXJhbXMgfSBmcm9tICJAL3V0aWxzL2NvbW1vbi5qcyI7CmltcG9ydCB7IGdldEFsbExpc3QsIHdpdGhkcmF3TWVzc2FnZUJ5QWRtaW4gfSBmcm9tICJAL2FwaS9nZXREYXRhLmpzIjsKaW1wb3J0IHsgZ2V0TXNnU3RhdHVzRGVzYywgZ2V0TXNnU3RhdHVzQ29kZUJ5TmFtZSB9IGZyb20gIkAvdXRpbHMvYXJ0aWNsZVV0aWxzLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAiYXJ0aWNsZSBNYW5hZ2VtZW50IiwKICAgICAgZGF0YTogbnVsbCwKICAgICAgc2VsZWN0RGVwdDogIuWFqOmDqCIsCiAgICAgIGRpc3RyaWJ1dGVEZXBhcnRJdGVtczogWyLlhajpg6giXSwKICAgICAgc2VsZWN0U3RhdHVzOiAi5YWo6YOoIiwKICAgICAgZGlzdHJpYnV0ZVN0YXR1c0l0ZW1zOiBbIuWFqOmDqCIsICLlt7Llj5HluIMiLCAi5bey5Y+s5ZueIiwgIuW3suWkseaViCJdLAogICAgICBzZWFyY2g6ICIiLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICLmoIfpopgiLAogICAgICAgIHdpZHRoOiAiMzAwcHgiLAogICAgICAgIGFsaWduOiAic3RhcnQiLAogICAgICAgIHZhbHVlOiAidGl0bGUiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAi5Y+R5biD6YOo6ZeoIiwKICAgICAgICB3aWR0aDogIjE2MHB4IiwKICAgICAgICB2YWx1ZTogImNyZWF0b3JDb21wYW55bmFtZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICLpmYTku7YiLAogICAgICAgIHdpZHRoOiAiODBweCIsCiAgICAgICAgdmFsdWU6ICJhdHRhY2htZW50Q291bnQiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAi6ZiF6K+7IiwKICAgICAgICB3aWR0aDogIjgwcHgiLAogICAgICAgIHZhbHVlOiAicmVhZENvdW50IgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIuWbnuWkjSIsCiAgICAgICAgd2lkdGg6ICI4MHB4IiwKICAgICAgICB2YWx1ZTogImZlZWRiYWNrQ291bnQiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAi5Y+R5biD54q25oCBIiwKICAgICAgICB3aWR0aDogIjgwcHgiLAogICAgICAgIHZhbHVlOiAibXNnU3RhdHVzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIuWPkeW4g+aXtumXtCIsCiAgICAgICAgYWxpZ246ICJzdGFydCIsCiAgICAgICAgd2lkdGg6ICIxODBweCIsCiAgICAgICAgdmFsdWU6ICJsYXN0VXBkYXRlVGltZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICLmk43kvZwiLAogICAgICAgIGFsaWduOiAiY2VudGVyIiwKICAgICAgICB3aWR0aDogIjEyMHB4IiwKICAgICAgICB2YWx1ZTogImFjdGlvbnMiCiAgICAgIH1dLAogICAgICBhcnRpY2xlSXRlbXM6IFtdLAogICAgICB3aXRoZHJhd0RpYWxvZzogZmFsc2UsCiAgICAgIGxvYWRpbmdEYXRhOiBmYWxzZSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIGxhc3RQYWdlOiAxLAogICAgICBwYWdlU2l6ZTogMTAsCiAgICAgIGhhc05leHRQYWdlOiB0cnVlLAogICAgICByZXNldDogdHJ1ZSwKICAgICAgdG90YWxhZ2U6IDEsCiAgICAgIHNlYXJjaFBhcmFtOiB7fSwKICAgICAgd2l0aGRyYXdJdGVtOiB7CiAgICAgICAgaWQ6IDAsCiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIGRpc3RyaWJ1dGVEZXBhcnQ6ICIiLAogICAgICAgIGF0dGFjaG1lbnQ6IDAsCiAgICAgICAgcmVhZGluZ051bTogMCwKICAgICAgICByZXBseU51bTogMCwKICAgICAgICBkaXN0cmlidXRlU3RhdHVzOiAiIiwKICAgICAgICBkaXN0cmlidXRlVGltZTogIiIKICAgICAgfQogICAgfTsKICB9LAogIC8v55uR6KeG5a+56K+d5qGGCiAgd2F0Y2g6IHsKICAgIGRpYWxvZzogZnVuY3Rpb24gZGlhbG9nKHZhbCkgewogICAgICB2YWwgfHwgdGhpcy5jbG9zZSgpOwogICAgfSwKICAgIGlucHV0OiBmdW5jdGlvbiBpbnB1dChwYWdlKSB7CiAgICAgIGFsZXJ0KHBhZ2UpOwogICAgfSwKICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQocGFnZSkgewogICAgICBhbGVydChwYWdlKTsKICAgIH0sCiAgICBwcmV2aW91czogZnVuY3Rpb24gcHJldmlvdXMocGFnZSkgewogICAgICBhbGVydChwYWdlKTsKICAgIH0KICB9LAogIC8v6aG16Z2i56ys5LiA5qyh5Yqg6L295pe2LOiwg+eUqOWIneWni+WMluaWueazlQogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5zZWFyY2hQYXJhbS5wYWdlU2l6ZSA9IHRoaXMucGFnZVNpemU7CiAgICB0aGlzLnNlYXJjaFBhcmFtLnBhZ2VOdW0gPSAxOwogICAgdGhpcy5nZXRBbGxBcnRpY2xlKHRoaXMuc2VhcmNoUGFyYW0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0SGVhZGVyOiBmdW5jdGlvbiBnZXRIZWFkZXIoKSB7CiAgICAgIHJldHVybiAiaGVhZGVyLnRpdGxlIjsKICAgIH0sCiAgICB0b0FydGljbGVEZXRhaWw6IGZ1bmN0aW9uIHRvQXJ0aWNsZURldGFpbChpdGVtKSB7CiAgICAgIC8v6I2J56i/5bCx5Yir6Lez5LqG44CC6Lez5LqG6IKv5a6a5Ye65LqLLi4uLgogICAgICBpZiAoaXRlbS5tc2dTdGF0dXMgPT09IDApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKCI+Pj4+PiBqdW1wIHRvIGRldGFpbCBpZCA9ICIgKyBpdGVtLmlkKTsKICAgICAganVtcFRvRGV0YWlsKHRoaXMuJHJvdXRlciwgaXRlbS5pZCk7CiAgICB9LAogICAgdG9DaGFuZ2VMb2c6IGZ1bmN0aW9uIHRvQ2hhbmdlTG9nKGl0ZW0pIHsKICAgICAganVtcFRvRGV0YWlsV2l0aFBhcmFtcyh0aGlzLiRyb3V0ZXIsIGl0ZW0uaWQsIHRydWUpOwogICAgfSwKICAgIG9uUGFnZTogZnVuY3Rpb24gb25QYWdlKCkgewogICAgICBjb25zb2xlLmxvZygiPj4+IGxvYWQgcHJlcGFyZSBsb2FkIHBhZ2UgWyIgKyB0aGlzLmN1cnJlbnRQYWdlICsgIl0gPDw8ICIpOwoKICAgICAgaWYgKHRoaXMubGFzdFBhZ2UgPT09IHRoaXMuY3VycmVudFBhZ2UpIHsKICAgICAgICBjb25zb2xlLmxvZygiPj4+ICB0aGUgdHdvIHBhZ2UgbnVtYmVyIGFyZSB0aGUgc2FtZSwgc28gd2UgYWJhbmRvbiBsb2FkIHBhZ2UgY3VycmVudCBwYWdlID0gWyIgKyB0aGlzLmN1cnJlbnRQYWdlICsgIl0gIGxhc3QgcGFnZSA9IFsiICsgdGhpcy5sYXN0UGFnZSArICJdPDw8ICIpOwogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygiPj4+IGJlZ2luIGxvYWQgcGFnZSBbIiArIHRoaXMuY3VycmVudFBhZ2UgKyAiXSA8PDwgIik7CiAgICAgICAgdGhpcy5sYXN0UGFnZSA9IHRoaXMuY3VycmVudFBhZ2U7CiAgICAgICAgdGhpcy5zZWFyY2hQYXJhbS5wYWdlTnVtID0gdGhpcy5jdXJyZW50UGFnZTsKICAgICAgICB0aGlzLnNlYXJjaFBhcmFtLnBhZ2VTaXplID0gdGhpcy5wYWdlU2l6ZTsKICAgICAgICB0aGlzLmdldEFsbEFydGljbGUodGhpcy5zZWFyY2hQYXJhbSk7CiAgICAgIH0KICAgIH0sCiAgICBjb252ZXJ0OiBmdW5jdGlvbiBjb252ZXJ0KHN0YXR1cykgewogICAgICByZXR1cm4gZ2V0TXNnU3RhdHVzRGVzYyhzdGF0dXMpOwogICAgfSwKICAgIGdldENvbG9yOiBmdW5jdGlvbiBnZXRDb2xvcihtc2dTdGF0dXMpIHsKICAgICAgaWYgKG1zZ1N0YXR1cyA9PT0gMSkgcmV0dXJuICIjMTFCQTNFIjtlbHNlIGlmIChtc2dTdGF0dXMgPT09IDIpIHJldHVybiAiI0Y0NDMzNiI7ZWxzZSBpZiAobXNnU3RhdHVzID09PSA1KSByZXR1cm4gIiMxODY3QzAiO2Vsc2UgaWYgKG1zZ1N0YXR1cyA9PT0gNCkgcmV0dXJuICIjOTk5OTk5IjtlbHNlIHJldHVybiAiIzE4NjdDMCI7CiAgICB9LAogICAgcmVzZXRTZWFyY2g6IGZ1bmN0aW9uIHJlc2V0U2VhcmNoKCkgewogICAgICBpZiAodGhpcy5yZXNldCkgewogICAgICAgIGNvbnNvbGUubG9nKCI+Pj4+IGFscmVhZHkgaGFkIHJlc2V0IDw8PDwiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKCI+Pj4+ICByZXNldCBzZWFyY2ggPDw8PCIpOwogICAgICB0aGlzLnNlbGVjdERlcHQgPSAi5YWo6YOoIjsKICAgICAgdGhpcy5zZWxlY3RTdGF0dXMgPSAi5YWo6YOoIjsKICAgICAgdGhpcy5zZWFyY2ggPSAiIjsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMubGFzdFBhZ2UgPSAxOwogICAgICB0aGlzLnNlYXJjaFBhcmFtID0ge307CiAgICAgIHRoaXMucmVzZXQgPSB0cnVlOwogICAgICB0aGlzLmdldEFsbEFydGljbGUoKTsKICAgIH0sCiAgICBvblNlYXJjaEFydGljbGU6IGZ1bmN0aW9uIG9uU2VhcmNoQXJ0aWNsZSgpIHsKICAgICAgLy/ngrnlh7vnoa7lrprmjInpkq7lsLHph43mlrDmkJzkuIDmrKEs5bm25LiU5a2Y5YKo5pCc57Si5p2h5Lu2CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgICB0aGlzLnNlYXJjaFBhcmFtID0ge307CgogICAgICBpZiAodGhpcy5zZWxlY3REZXB0ICE9PSAi5YWo6YOoIikgewogICAgICAgIHRoaXMuc2VhcmNoUGFyYW0uZGVwYXJ0bWVudCA9IHRoaXMuc2VsZWN0RGVwdDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VsZWN0U3RhdHVzICE9PSAi5YWo6YOoIikgewogICAgICAgIHRoaXMuc2VhcmNoUGFyYW0ubXNnU3RhdHVzID0gZ2V0TXNnU3RhdHVzQ29kZUJ5TmFtZSh0aGlzLnNlbGVjdFN0YXR1cyk7CiAgICAgIH0KCiAgICAgIGlmICh0eXBlb2YgdGhpcy5zZWFyY2ggIT09ICJ1bmRlZmluZWQiICYmIHRoaXMuc2VhcmNoICE9IG51bGwgJiYgdGhpcy5zZWFyY2gudHJpbSgpICE9PSAiIikgewogICAgICAgIHRoaXMuc2VhcmNoUGFyYW0uc2VhcmNoQ29udGVudCA9IHRoaXMuc2VhcmNoOwogICAgICB9IC8v55yL5p2l5LiN6ZyA6KaB5YGa5rKh6L6T5YWl5p2h5Lu255qE5aSE55CGCiAgICAgIC8vIGlmKEpTT04uc3RyaW5naWZ5KHRoaXMuc2VhcmNoUGFyYW0pID09PSAie30iKSB7CiAgICAgIC8vICAgY29uc29sZS5sb2coIj4+PiBzZWFyY2ggb3B0aW9uIGhhcyBub3QgY2hhbmdlZCA8PDwgIikKICAgICAgLy8gICByZXR1cm47CiAgICAgIC8vIH0KCgogICAgICB0aGlzLnJlc2V0ID0gZmFsc2U7CiAgICAgIHRoaXMuc2VhcmNoUGFyYW0ucGFnZU51bSA9IDE7CiAgICAgIHRoaXMuc2VhcmNoUGFyYW0ucGFnZVNpemUgPSB0aGlzLnBhZ2VTaXplOwogICAgICBjb25zb2xlLmxvZygiPj4+IG9uIHNlYXJjaCA8PDwiKTsKICAgICAgdGhpcy5nZXRBbGxBcnRpY2xlKHRoaXMuc2VhcmNoUGFyYW0pOwogICAgfSwKICAgIGdldEFsbEFydGljbGU6IGZ1bmN0aW9uIGdldEFsbEFydGljbGUocGFyYW0pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZ0RhdGEgPSB0cnVlLCBjb25zb2xlLmxvZygiID4+Pj4+IHByZXBhcmUgZ2V0IGFsbCBhcnRpY2xlcyA+Pj4+Pj4+PiBwYXJhbXMgPj4+Pj4+IDogIiArIEpTT04uc3RyaW5naWZ5KHBhcmFtKSk7CiAgICAgIGdldEFsbExpc3QocGFyYW0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubG9hZGluZ0RhdGEgPSBmYWxzZTsKCiAgICAgICAgaWYgKCFyZXNwb25zZSAmJiB0eXBlb2YgcmVzcG9uc2UgIT0gInVuZGVmaW5lZCIgfHwgcmVzcG9uc2UuY29kZSAhPSAwIHx8IHJlc3BvbnNlLmRhdGEubWVzc2FnZUxpc3QubGVuZ3RoID09IDApIHsKICAgICAgICAgIC8v6ZyA6KaB5riF56m6546w5Zyo55qE5pWw5o2uLOS9huaYr+aQnOe0ouadoeS7tuS4jeW7uuiurua4heepugogICAgICAgICAgX3RoaXMuYXJ0aWNsZUl0ZW1zID0gW107CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvL2xldCBhcnRpY2xlcyA9IFtdOwoKCiAgICAgICAgY29uc29sZS5kZWJ1ZygicmVzcG9uc2UganNvbj09PT09PT4iICsgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTsKICAgICAgICBfdGhpcy5hcnRpY2xlSXRlbXMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2VMaXN0OwogICAgICAgIF90aGlzLnRvdGFsUGFnZSA9IE1hdGguY2VpbChyZXNwb25zZS5kYXRhLnRvdGFsIC8gX3RoaXMucGFnZVNpemUpOwogICAgICAgIF90aGlzLmRpc3RyaWJ1dGVEZXBhcnRJdGVtcyA9IFsi5YWo6YOoIl07CiAgICAgICAgX3RoaXMuZGlzdHJpYnV0ZURlcGFydEl0ZW1zID0gX3RoaXMuZGlzdHJpYnV0ZURlcGFydEl0ZW1zLmNvbmNhdChyZXNwb25zZS5kYXRhLmRlcGFydG1lbnRzKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBfdGhpcy5hcnRpY2xlSXRlbXMgPSBbXTsKICAgICAgICBfdGhpcy5sb2FkaW5nRGF0YSA9IGZhbHNlOwogICAgICAgIGNvbnNvbGUubG9nKCJvbiBnZXQgYXJ0aWNsZSBsaXN0IGVycm9yID09PT09PT4iICsgSlNPTi5zdHJpbmdpZnkoZSkpOwogICAgICB9KTsKICAgIH0sCiAgICB3aXRoZHJhdzogZnVuY3Rpb24gd2l0aGRyYXcoaXRlbSkgewogICAgICB0aGlzLndpdGhkcmF3SXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pOwogICAgICB0aGlzLndpdGhkcmF3RGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICAvL+WFs+mXreaSpOWbnuWvueivneahhgogICAgY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICB0aGlzLndpdGhkcmF3RGlhbG9nID0gZmFsc2U7CiAgICB9LAogICAgbGVuZ2h0aDogZnVuY3Rpb24gbGVuZ2h0aCh0ZXh0LCBsZW5ndGgpIHsKICAgICAgdmFyIHN1ZmZpeCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogIi4uLiI7CiAgICAgIGlmICghdGV4dCkgcmV0dXJuOwoKICAgICAgaWYgKHRleHQubGVuZ3RoIDw9IGxlbmd0aCkgewogICAgICAgIHJldHVybiB0ZXh0OwogICAgICB9CgogICAgICByZXR1cm4gKHRleHQgKyAiIikuc3Vic3RyaW5nKDAsIGxlbmd0aCkgKyBzdWZmaXg7CiAgICB9LAogICAgLy/mkqTlm57noa7orqQKICAgIHdpdGhkcmF3Q29uZmlybTogZnVuY3Rpb24gd2l0aGRyYXdDb25maXJtKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMud2l0aGRyYXdEaWFsb2cgPSBmYWxzZTsKICAgICAgd2l0aGRyYXdNZXNzYWdlQnlBZG1pbih0aGlzLndpdGhkcmF3SXRlbS5pZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKCFyZXMgJiYgdHlwZW9mIHJlcyAhPSAidW5kZWZpbmVkIiB8fCByZXMuY29kZSAhPSAwKSByZXR1cm47CiAgICAgICAgY29uc29sZS5kZWJ1ZyhKU09OLnN0cmluZ2lmeShyZXMpKTsKICAgICAgICB2YXIgaSA9IC0xOwoKICAgICAgICBfdGhpczIuYXJ0aWNsZUl0ZW1zLnNvbWUoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICBpZiAoaXRlbS5pZCA9PSBfdGhpczIud2l0aGRyYXdJdGVtLmlkKSB7CiAgICAgICAgICAgIGkgPSBpbmRleDsKICAgICAgICAgICAgaXRlbS5tc2dTdGF0dXMgPSAyOwogICAgICAgICAgICBpdGVtLmRpc3RyaWJ1dGVTdGF0dXMgPSBnZXRNc2dTdGF0dXNEZXNjKGl0ZW0ubXNnU3RhdHVzKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgaWYgKGkgPj0gMCkgewogICAgICAgICAgX3RoaXMyLmFydGljbGVJdGVtcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoX3RoaXMyLmFydGljbGVJdGVtcykpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goKTsKICAgIH0KICB9Cn07"},null]}