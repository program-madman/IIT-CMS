{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js??ref--13-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/common.js","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/common.js","mtime":1638263646796},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL2xpdWd1YW5naHVpL0RvY3VtZW50cy9jbXNfY29kZS9teS1tZXNzYWdlL2Ntcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vQSBkZWVwIGNvcHkgZnVuY3Rpb24gdG8gcmVjZWl2ZSB0aGUgdGFyZ2V0IHBhcmFtZXRlcgovLyDlrprkuYnkuIDkuKrmt7Hmi7fotJ3lh73mlbAgIOaOpeaUtuebruagh3RhcmdldOWPguaVsApleHBvcnQgdmFyIGRlZXBDbG9uZSA9IGZ1bmN0aW9uIGRlZXBDbG9uZSh0YXJnZXQpIHsKICAvLyDlrprkuYnkuIDkuKrlj5jph48KICB2YXIgcmVzdWx0OyAvLyDlpoLmnpzlvZPliY3pnIDopoHmt7Hmi7fotJ3nmoTmmK/kuIDkuKrlr7nosaHnmoTor50KCiAgaWYgKF90eXBlb2YodGFyZ2V0KSA9PT0gJ29iamVjdCcpIHsKICAgIC8vIOWmguaenOaYr+S4gOS4quaVsOe7hOeahOivnQogICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkgewogICAgICByZXN1bHQgPSBbXTsgLy8g5bCGcmVzdWx06LWL5YC85Li65LiA5Liq5pWw57uE77yM5bm25LiU5omn6KGM6YGN5Y6GCgogICAgICBmb3IgKHZhciBpIGluIHRhcmdldCkgewogICAgICAgIC8vIOmAkuW9kuWFi+mahuaVsOe7hOS4reeahOavj+S4gOmhuQogICAgICAgIHJlc3VsdC5wdXNoKGRlZXBDbG9uZSh0YXJnZXRbaV0pKTsKICAgICAgfSAvLyDliKTmlq3lpoLmnpzlvZPliY3nmoTlgLzmmK9udWxs55qE6K+d77yb55u05o6l6LWL5YC85Li6bnVsbAoKICAgIH0gZWxzZSBpZiAodGFyZ2V0ID09PSBudWxsKSB7CiAgICAgIHJlc3VsdCA9IG51bGw7IC8vIOWIpOaWreWmguaenOW9k+WJjeeahOWAvOaYr+S4gOS4qlJlZ0V4cOWvueixoeeahOivne+8jOebtOaOpei1i+WAvAogICAgfSBlbHNlIGlmICh0YXJnZXQuY29uc3RydWN0b3IgPT09IFJlZ0V4cCkgewogICAgICByZXN1bHQgPSB0YXJnZXQ7CiAgICB9IGVsc2UgewogICAgICAvLyDlkKbliJnmmK/mma7pgJrlr7nosaHvvIznm7TmjqVmb3IgaW7lvqrnjq/vvIzpgJLlvZLotYvlgLzlr7nosaHnmoTmiYDmnInlgLwKICAgICAgcmVzdWx0ID0ge307CgogICAgICBmb3IgKHZhciBfaSBpbiB0YXJnZXQpIHsKICAgICAgICByZXN1bHRbX2ldID0gZGVlcENsb25lKHRhcmdldFtfaV0pOwogICAgICB9CiAgICB9CiAgfSBlbHNlIHsKICAgIC8vIOWmguaenOS4jeaYr+WvueixoeeahOivne+8jOWwseaYr+WfuuacrOaVsOaNruexu+Wei++8jOmCo+S5iOebtOaOpei1i+WAvAogICAgcmVzdWx0ID0gdGFyZ2V0OwogIH0gLy8g6L+U5Zue5pyA57uI57uT5p6cCgoKICByZXR1cm4gcmVzdWx0Owp9OyAvL+aYvuekuuaWh+eroOeKtuaAgTowOuiNieeovyAxOuW3suWPkeW4gyAyOuWPrOWbniAzOuW3suS/ruaUuSA0OuW3suWkseaViAoKZXhwb3J0IHZhciBzaG93TXNnVGV4dCA9IGZ1bmN0aW9uIHNob3dNc2dUZXh0KHN0YXR1cykgewogIHN3aXRjaCAoc3RhdHVzKSB7CiAgICBjYXNlICIwIjoKICAgICAgcmV0dXJuICflt7Llj5HluIMnOwoKICAgIGNhc2UgIjEiOgogICAgICByZXR1cm4gJ+e8lui+keS6hic7CgogICAgY2FzZSAiMiI6CiAgICAgIHJldHVybiAn5Y+s5ZueJzsKCiAgICBjYXNlICIzIjoKICAgICAgcmV0dXJuICfph43mlrDlj5HluIMnOwoKICAgIGNhc2UgIjQiOgogICAgICByZXR1cm4gJ+W3suWkseaViCc7CgogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuICIiOwogIH0KfTsgLy/mlofku7bkuIrkvKAKCmV4cG9ydCB2YXIgZmlsZVVwbG9hZCA9IGZ1bmN0aW9uIGZpbGVVcGxvYWQoZXZlbnQpIHsKICB2YXIgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlczsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWxlLmxlbmd0aDsgaSsrKSB7CiAgICAvL+S4iuS8oOexu+Wei+WIpOaWrQogICAgdmFyIGltZ05hbWUgPSBmaWxlW2ldLm5hbWU7CiAgICB2YXIgaWR4ID0gaW1nTmFtZS5sYXN0SW5kZXhPZigiLiIpOwoKICAgIGlmIChpZHggIT0gLTEpIHsKICAgICAgdmFyIGV4dCA9IGltZ05hbWUuc3Vic3RyKGlkeCArIDEpLnRvVXBwZXJDYXNlKCk7CiAgICAgIGV4dCA9IGV4dC50b0xvd2VyQ2FzZSgpOwoKICAgICAgaWYgKGV4dCAhPSAncGRmJyAmJiBleHQgIT0gJ2RvYycgJiYgZXh0ICE9ICdkb2N4JyAmJiBleHQgIT0gJ2pwZycgJiYgZXh0ICE9ICdqcGVnJyAmJiBleHQgIT0gJ3hscycgJiYgZXh0ICE9ICd4bHN4JykgewogICAgICAgIGNvbnNvbGUubG9nKCLmlofku7bnsbvlnovplJnor68iKTsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygi5paH5Lu257G75Z6L5q2j56GuIik7CiAgICAgIH0KICAgIH0KICB9CgogIGNvbnNvbGUubG9nKGZpbGUpOwogIHJldHVybiBmaWxlOwp9Ow=="},{"version":3,"sources":["/Users/liuguanghui/Documents/cms_code/my-message/cms/src/utils/common.js"],"names":["deepClone","target","result","Array","isArray","i","push","constructor","RegExp","showMsgText","status","fileUpload","event","file","files","length","imgName","name","idx","lastIndexOf","ext","substr","toUpperCase","toLowerCase","console","log"],"mappings":";;;;;AAAA;AACA;AACA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAEjC;AACA,MAAIC,MAAJ,CAHiC,CAIjC;;AACA,MAAI,QAAOD,MAAP,MAAkB,QAAtB,EAAgC;AAC5B;AACA,QAAIE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACvBC,MAAAA,MAAM,GAAG,EAAT,CADuB,CACV;;AACb,WAAK,IAAIG,CAAT,IAAcJ,MAAd,EAAsB;AAClB;AACAC,QAAAA,MAAM,CAACI,IAAP,CAAYN,SAAS,CAACC,MAAM,CAACI,CAAD,CAAP,CAArB;AACH,OALsB,CAMvB;;AACH,KAPD,MAOO,IAAIJ,MAAM,KAAK,IAAf,EAAqB;AACxBC,MAAAA,MAAM,GAAG,IAAT,CADwB,CAExB;AACH,KAHM,MAGA,IAAID,MAAM,CAACM,WAAP,KAAuBC,MAA3B,EAAmC;AACtCN,MAAAA,MAAM,GAAGD,MAAT;AACH,KAFM,MAEA;AACH;AACAC,MAAAA,MAAM,GAAG,EAAT;;AACA,WAAK,IAAIG,EAAT,IAAcJ,MAAd,EAAsB;AAClBC,QAAAA,MAAM,CAACG,EAAD,CAAN,GAAYL,SAAS,CAACC,MAAM,CAACI,EAAD,CAAP,CAArB;AACH;AACJ;AACJ,GArBD,MAqBO;AACH;AACAH,IAAAA,MAAM,GAAGD,MAAT;AACH,GA7BgC,CA8BjC;;;AACA,SAAOC,MAAP;AACH,CAhCM,C,CAkCL;;AACF,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAW;AAClC,UAAOA,MAAP;AACI,SAAK,GAAL;AACI,aAAO,KAAP;;AACJ,SAAK,GAAL;AACI,aAAO,KAAP;;AACJ,SAAK,GAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,MAAP;;AACJ,SAAK,GAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAO,EAAP;AAZR;AAcH,CAfM,C,CAkBN;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAU;AACjC,MAAIC,IAAI,GAAGD,KAAK,CAACX,MAAN,CAAaa,KAAxB;;AACA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,IAAI,CAACE,MAAzB,EAAiCV,CAAC,EAAlC,EAAsC;AACpC;AACA,QAAIW,OAAO,GAAGH,IAAI,CAACR,CAAD,CAAJ,CAAQY,IAAtB;AACA,QAAIC,GAAG,GAAGF,OAAO,CAACG,WAAR,CAAoB,GAApB,CAAV;;AACA,QAAID,GAAG,IAAI,CAAC,CAAZ,EAAe;AACb,UAAIE,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAeH,GAAG,GAAG,CAArB,EAAwBI,WAAxB,EAAV;AACAF,MAAAA,GAAG,GAAGA,GAAG,CAACG,WAAJ,EAAN;;AACA,UAAIH,GAAG,IAAI,KAAP,IAAgBA,GAAG,IAAI,KAAvB,IAAgCA,GAAG,IAAI,MAAvC,IAAiDA,GAAG,IAAI,KAAxD,IAAiEA,GAAG,IAAI,MAAxE,IAAkFA,GAAG,IAAI,KAAzF,IAAkGA,GAAG,IAAI,MAA7G,EAAqH;AACnHI,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF;AACF;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,SAAOA,IAAP;AACD,CAnBK","sourcesContent":["//A deep copy function to receive the target parameter\n// 定义一个深拷贝函数  接收目标target参数\nexport const deepClone = (target) => {\n\n    // 定义一个变量\n    let result;\n    // 如果当前需要深拷贝的是一个对象的话\n    if (typeof target === 'object') {\n        // 如果是一个数组的话\n        if (Array.isArray(target)) {\n            result = []; // 将result赋值为一个数组，并且执行遍历\n            for (let i in target) {\n                // 递归克隆数组中的每一项\n                result.push(deepClone(target[i]))\n            }\n            // 判断如果当前的值是null的话；直接赋值为null\n        } else if (target === null) {\n            result = null;\n            // 判断如果当前的值是一个RegExp对象的话，直接赋值\n        } else if (target.constructor === RegExp) {\n            result = target;\n        } else {\n            // 否则是普通对象，直接for in循环，递归赋值对象的所有值\n            result = {};\n            for (let i in target) {\n                result[i] = deepClone(target[i]);\n            }\n        }\n    } else {\n        // 如果不是对象的话，就是基本数据类型，那么直接赋值\n        result = target;\n    }\n    // 返回最终结果\n    return result;\n}\n\n  //显示文章状态:0:草稿 1:已发布 2:召回 3:已修改 4:已失效\nexport const showMsgText = (status) =>{\n    switch(status){\n        case \"0\":\n            return '已发布';\n        case \"1\":\n            return '编辑了';\n        case \"2\":\n            return '召回';\n        case \"3\":\n            return '重新发布'; \n        case \"4\":\n            return '已失效';  \n        default:\n            return \"\"                            \n    }\n}\n\n\n //文件上传\n export const fileUpload = (event) =>{\n    let file = event.target.files;\n    for (let i = 0; i < file.length; i++) {\n      //上传类型判断\n      let imgName = file[i].name;\n      let idx = imgName.lastIndexOf(\".\");\n      if (idx != -1) {\n        let ext = imgName.substr(idx + 1).toUpperCase();\n        ext = ext.toLowerCase();\n        if (ext != 'pdf' && ext != 'doc' && ext != 'docx' && ext != 'jpg' && ext != 'jpeg' && ext != 'xls' && ext != 'xlsx') {\n          console.log(\"文件类型错误\")\n          return null;\n        } else {\n          console.log(\"文件类型正确\")    \n        }\n      }\n    }\n    console.log(file);\n    return file;\n  }"]}]}