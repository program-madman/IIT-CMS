{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js??ref--13-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/config/myAxios.js","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/config/myAxios.js","mtime":1638535920897},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vaW1wb3J0IHtiYXNlVXJsfSBmcm9tICcuL2Vudic7Ci8vICDorqnor7fmsYLlnKjmtY/op4jlmajkuK3lhYHorrjot6jln5/mkLrluKZjb29raWUKLy9heGlvcy5kZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMgPSB0cnVlOwovLyBheGlvcy5kZWZhdWx0cy5wb3N0WydDb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJyAvLyDor7fmsYLlpLTlr7nlupTmlbDmja7moLzlvI8KCnZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy8gYmFzZVVybAogIGJhc2VVUkw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEksCiAgLy8g6LaF5pe2CiAgdGltZW91dDogMTAwMDAKfSk7IC8vIC8v6K+35rGC5oum5oiqCi8vIGluc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSggY29uZmlnPT57Ci8vICAgICBjb25zb2xlLmxvZyhjb25maWcpCi8vICAgICAvL+WkhOeQhnRva2VuCi8vICAgICAvLyAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKSB7Ci8vICAgIC8vICAgICBjb25maWcuaGVhZGVycy5BQ0NFU1NfVE9LRU4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKLy8gICAgLy8gIH0KLy8gICAgIHJldHVybiBjb25maWc7Ci8vIH0sZXJyb3I9PnsKLy8gICAgIC8v5a+56K+35rGC6ZSZ6K+v5YGa5Lqb5LuA5LmICi8vICAgIGNvbnNvbGUubG9nKGVycm9yKTsKLy8gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCk7Ci8vIH0pOwoKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBjb25zb2xlLmRlYnVnKCfor7fmsYLlj4LmlbDvvJonLCBjb25maWcpOwogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvL+i/lOWbnuaLpuaIqgoKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAvLyAyMDDmraPnoa7vvIzov5Tlm57nu5PmnpwgCiAgY29uc29sZS5kZWJ1ZyhyZXNwb25zZSk7CgogIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXNwb25zZS5kYXRhKTsKICB9IGVsc2UgewogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKTsKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8v6LaF5pe25aSE55CGICAKICB2YXIgbWVzc2FnZSA9IGVycm9yLm1lc3NhZ2U7CgogIGlmIChlcnJvci5jb2RlID09PSAnRUNPTk5BQk9SVEVEJyAmJiBtZXNzYWdlLmluZGV4T2YoJ3RpbWVvdXQnKSA+IC0xKSB7CiAgICBjb25zb2xlLmVycm9yKCLor7fmsYLotoXml7bvvIHor7fmo4Dmn6XnvZHnu5zpl67popgiKTsgLy8gIGxldCBuZXdIdHRwPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSl7CiAgICAvLyAgICAgIHJlc29sdmUoKQogICAgLy8gIH0pCiAgICAvLyAgbmV3SHR0cOWunuS+i+aJp+ihjOWujOaIkOWQjuS8muWGjeasoeaJp+ihjAogICAgLy8gIOi/lOWbnuS4gOS4qnByb21pc2Xlrp7kvovvvIzlkIzml7bph43mlrDlj5Hotbfor7fmsYLvvIxjb25maWfor7fmsYLphY3nva7vvIzljIXmianor7fmsYLlpLTlkozor7fmsYLlj4LmlbAgCiAgICAvLyAgcmV0dXJuIG5ld0h0dHAudGhlbihmdW5jdGlvbiAoKXsKICAgIC8vICAgICAgcmV0dXJuICBheGlvcy5jcmVhdGUoe2Jhc2VVUkw6IGJhc2VVcmwsdGltZW91dDogMTAwMDB9KTsKICAgIC8vICB9KQoKICAgIHJldHVybjsKICB9CgogIGlmICg0MDAgPD0gZXJyb3IucmVzcG9uc2Uuc3RhdHVzIDwgNTAwKSB7CiAgICBjb25zb2xlLmVycm9yKCLmnI3liqHlmajplJnor6/vvIxjb2RlIO+8miIgKyBlcnJvci5yZXNwb25zZS5zdGF0dXMpOyAvLyDmuIXpmaR0b2tlbgogICAgLy8gbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInRva2VuIik7CiAgICAvLyDot7PovaznmbvlvZUKCiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOyAvLyBzZXRUaW1lb3V0KCgpID0+IHsKICAgIC8vICAgICAvLyAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gIi9sb2dpbiI7CiAgICAvLyB9LCAxMDAwKTsKICB9IGVsc2UgewogICAgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA+PSA1MDApIHsKICAgICAgY29uc29sZS5kZWJ1Zygi5pyN5Yqh5Zmo6ZSZ6K+v77yMY29kZSDvvJogIiArIGVycm9yLnJlc3BvbnNlLnN0YXR1cyk7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmRlYnVnKCLmnI3liqHlmajplJnor6/vvIxjb2RlIO+8miAiICsgZXJyb3IucmVzcG9uc2Uuc3RhdHVzKTsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0KICB9Cn0pOwpleHBvcnQgZGVmYXVsdCBpbnN0YW5jZTs="},{"version":3,"sources":["/Users/liuguanghui/Documents/cms_code/my-message/cms/src/config/myAxios.js"],"names":["axios","instance","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","console","debug","error","Promise","reject","response","status","resolve","data","message","code","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;AACA;;AAGA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1B;AACAC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBAFK;AAG1B;AACAC,EAAAA,OAAO,EAAE;AAJiB,CAAb,CAAjB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAN,QAAQ,CAACO,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,EAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBF,MAAvB;AACA,SAAOA,MAAP;AACH,CAHD,EAGG,UAAAG,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CALD,E,CAOA;;AACAb,QAAQ,CAACO,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CAAmC,UAAAO,QAAQ,EAAI;AAC3C;AACAL,EAAAA,OAAO,CAACC,KAAR,CAAcI,QAAd;;AACA,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,WAAOH,OAAO,CAACI,OAAR,CAAgBF,QAAQ,CAACG,IAAzB,CAAP;AACH,GAFD,MAEO;AACH,WAAOL,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACH;AACJ,CARD,EAQG,UAAAH,KAAK,EAAI;AACR;AACA,MAAQO,OAAR,GAAoBP,KAApB,CAAQO,OAAR;;AACA,MAAIP,KAAK,CAACQ,IAAN,KAAe,cAAf,IAAiCD,OAAO,CAACE,OAAR,CAAgB,SAAhB,IAA6B,CAAC,CAAnE,EAAsE;AAClEX,IAAAA,OAAO,CAACE,KAAR,CAAc,cAAd,EADkE,CAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACH;;AAED,MACI,OAAOA,KAAK,CAACG,QAAN,CAAeC,MAAtB,GAA+B,GADnC,EAGE;AACEN,IAAAA,OAAO,CAACE,KAAR,CAAc,iBAAiBA,KAAK,CAACG,QAAN,CAAeC,MAA9C,EADF,CAEE;AACA;AACA;;AACA,WAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CALF,CAME;AACA;AACA;AACH,GAZD,MAYO;AACH,QAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;AAC9BN,MAAAA,OAAO,CAACC,KAAR,CAAc,kBAAkBC,KAAK,CAACG,QAAN,CAAeC,MAA/C;AACH,KAFD,MAEO;AACHN,MAAAA,OAAO,CAACC,KAAR,CAAc,kBAAkBC,KAAK,CAACG,QAAN,CAAeC,MAA/C;AACA,aAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH;AACJ;AACJ,CA5CD;AA8CA,eAAeb,QAAf","sourcesContent":["import axios from 'axios';\n//import {baseUrl} from './env';\n\n//  让请求在浏览器中允许跨域携带cookie\n//axios.defaults.withCredentials = true;\n// axios.defaults.post['Content-type'] = 'application/json' // 请求头对应数据格式\n\n\nconst instance = axios.create({\n    // baseUrl\n    baseURL: process.env.VUE_APP_BASE_API,\n    // 超时\n    timeout: 10000\n})\n// //请求拦截\n// instance.interceptors.request.use( config=>{\n//     console.log(config)\n//     //处理token\n//     //  if (localStorage.getItem('token')) {\n//    //     config.headers.ACCESS_TOKEN = localStorage.getItem('token');\n//    //  }\n//     return config;\n// },error=>{\n//     //对请求错误做些什么\n//    console.log(error);\n//    return Promise.reject();\n// });\n\ninstance.interceptors.request.use(function (config) {\n    console.debug('请求参数：', config);\n    return config;\n}, error => {\n    return Promise.reject(error);\n});\n\n//返回拦截\ninstance.interceptors.response.use(response => {\n    // 200正确，返回结果 \n    console.debug(response)\n    if (response.status === 200) {\n        return Promise.resolve(response.data);\n    } else {\n        return Promise.reject(response);\n    }\n}, error => {\n    //超时处理  \n    const { message } = error;\n    if (error.code === 'ECONNABORTED' && message.indexOf('timeout') > -1) {\n        console.error(\"请求超时！请检查网络问题\");\n        //  let newHttp= new Promise(function (resolve){\n        //      resolve()\n        //  })\n        //  newHttp实例执行完成后会再次执行\n        //  返回一个promise实例，同时重新发起请求，config请求配置，包扩请求头和请求参数 \n        //  return newHttp.then(function (){\n        //      return  axios.create({baseURL: baseUrl,timeout: 10000});\n        //  })\n        return;\n    }\n\n    if (\n        400 <= error.response.status < 500\n\n    ) {\n        console.error(\"服务器错误，code ：\" + error.response.status);\n        // 清除token\n        // localStorage.removeItem(\"token\");\n        // 跳转登录\n        return Promise.reject(error)\n        // setTimeout(() => {\n        //     //   window.location.href = \"/login\";\n        // }, 1000);\n    } else {\n        if (error.response.status >= 500) {\n            console.debug(\"服务器错误，code ： \" + error.response.status);\n        } else {\n            console.debug(\"服务器错误，code ： \" + error.response.status);\n            return Promise.reject(error)\n        }\n    }\n});\n\nexport default instance;\n\n"]}]}