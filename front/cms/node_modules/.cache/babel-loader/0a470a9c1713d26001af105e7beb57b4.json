{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/components/statisticalReportSupplierView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/components/statisticalReportSupplierView.vue","mtime":1639836982485},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["statisticalReportSupplierView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card class=\"mx-auto\">\n    <v-toolbar dense color=\"#1867C0\">\n      <v-btn icon>\n        <v-icon color=\"white\" @click=\"bt_close\"> mdi-close </v-icon>\n      </v-btn>\n      <v-toolbar-title class=\"body-1 white--text\">统计报告</v-toolbar-title>\n    </v-toolbar>\n    <div class=\"pl-8 pr-8 pt-4\">\n      <span class=\"body-1 grey--text text--darken-3\"> 经销商 </span>\n      <template>\n        <loading v-if=\"loadingview\" /> \n        <v-data-table\n          v-else\n          :headers=\"headers\"\n          :items=\"desserts_area\"\n          item-key=\"area\"\n          :search=\"search_sele\"\n          class=\"mt-8 elevation-1\"\n          hide-default-footer\n        >\n          <template v-slot:body=\"{ items }\">\n            <tbody v-if=\"items.length > 0\">\n              <tr v-for=\"(item, iindex) in desserts_area\" :key=\"item.supnumber\">\n                <td>{{item.supnumber }}</td>\n                <td>\n                  <template\n                    v-if=\"statisticsStatusParam == STATISTICSSTATUS_TYPE_READ && readStatusParam==STATUS_UNREAD && areaparam!=''\"\n                  >\n                    <v-checkbox\n                      v-if=\"iindex === 0\"\n                      v-model=\"checkedAll\"\n                      :label=\"item.supname\"\n                      @change=\"changeAllChecked\"\n                    ></v-checkbox>\n                    <v-checkbox\n                      v-else\n                      v-model=\"checkedNames\"\n                      :value=\"item.supnumber\"\n                      :label=\"item.supname\"\n                    ></v-checkbox>\n                  </template>\n                  <template v-else>\n                    {{ item.supname }}\n                  </template>\n                </td>\n                <td\n                  @click=\"clickRow(STATISTICSSTATUS_TYPE_READ, item.supnumber)\"\n                >\n                   <span style=\"color: #1867c0\">{{\n                    item.readingStatisticsCount\n                  }}</span\n                  >/{{ item.readingTotalCount }} {{ item.readingPercentage }}%\n                </td>\n                <td\n                  @click=\"clickRow(STATISTICSSTATUS_TYPE_REPLY, item.supnumber)\"\n                >\n                  <span style=\"color: #1867c0\">{{\n                    item.replyStatisticsCount\n                  }}</span\n                  >/{{ item.replyTotalCount }} {{ item.replyPercentage }}%\n                </td>\n\n                <td\n                  v-for=\"attachment in item.attachDataList\"\n                  :key=\"attachment.id\"\n                  @click=\"clickRow(STATISTICSSTATUS_TYPE_ATTACH, item.id)\"\n                >\n                  <span style=\"color: #1867c0\">{{\n                    attachment.valueStatisticsCount\n                  }}</span\n                  >/{{ attachment.valueTotalCount }}\n                  {{ attachment.valuePercentage }}%\n                </td>\n              </tr>\n            </tbody>\n            <tbody v-else>\n              <tr>\n                <td :colspan=\"headers.length\" style=\"text-align: center\">\n                  No Results Here!\n                </td>\n              </tr>\n            </tbody>\n          </template>\n        </v-data-table>\n\n        <v-dialog\n          v-model=\"dialog_person\"\n          fullscreen\n          hide-overlay\n          transition=\"dialog-bottom-transition\"\n        >\n          <ReportPersonView\n            @closedChild=\"closeParent\"\n            :areaparam=\"this.areaparam\"\n            :msgIDParam=\"msgIDParam\"\n            :readStatusParam=\"readStatusParam\"\n            :statisticsStatusParam=\"selectStatisticsStatus\"\n            :attachmentIdParam=\"attachmentIdParam\"\n            :openStatus=\"dialog_person\"\n            :selectTypeValueParam=\"this.selectTypeValueParam\"\n            :companyCodeParam=\"selectCompanyCode\"\n            :unSelectCompanyInfos=\"unSelectComanyInfoMapInfo\"\n            :feebackBackType = \"feebackBackType\"\n          ></ReportPersonView>\n        </v-dialog>\n\n        <v-divider class=\"#E4E8EB\"></v-divider>\n      </template>\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport ReportPersonView from \"@/components/statisticalReportPersonView.vue\";\nimport { getDealerReport } from \"@/api/getData.js\";\nimport { roundFun } from \"@/utils/stringUtils.js\";\n\nexport default {\n  name: \"statisticalReportSupplierView\",\n  props: {\n    openStatus: {\n      type: Boolean,\n    },\n    areaparam: {\n      type: String,\n    },\n\n    msgIDParam: {\n      type: String,\n    },\n    readStatusParam: {\n      type: Number,\n    },\n    statisticsStatusParam: {\n      type: Number,\n    },\n    //反馈类型\n    feebackBackType:{\n      type:Number\n    },\n    attachmentIdParam: {\n      type: Number,\n    },\n    selectTypeValueParam: {\n      type: String,\n    },\n  },\n  components: {\n    ReportPersonView,\n    loading: () => import(\"@/components/base/loading.vue\"),\n  },\n\n  data() {\n    return {\n      //统计查询类型 0: 阅读类型查询 1: 附件类型查询 2: 回复类型查询\n      STATISTICSSTATUS_TYPE_READ: 0,\n      STATISTICSSTATUS_TYPE_ATTACH: 1,\n      STATISTICSSTATUS_TYPE_REPLY: 2,\n      dialog: this.open,\n      dialog_person: false,\n      search_sele: \"\",\n      selected_area: [],\n      expanded: [],\n      headers: [],\n      desserts_area: [],\n      selectCompanyCode: \"\",\n      selectStatisticsStatus: 0,\n\n        //加载状态\n      loadingview: true,\n\n      //状态：已读、未读\n      STATUS_UNREAD: 1,\n\n      unSelectComanyInfoMapInfo: new Map(),\n\n      //start 全选参数\n      checkedAll: true,\n      //所有选中的companyCode\n      checkedNames: [],\n      checkedArr: [],\n      //end 全选参数\n    };\n  },\n\n  mounted() {\n    console.log(\"---- mounted ----\");\n\n    this.getDealerReportService();\n  },\n\n  watch: {\n    openStatus(newV) {\n      console.log(\"openStatus:\" + newV);\n      //由不可见到可见\n      if (newV) {\n        this.getDealerReportService();\n      }\n    },\n    checkedNames: function () {\n      if (this.checkedNames.length == this.checkedArr.length) {\n        this.checkedAll = true;\n      } else {\n        this.checkedAll = false;\n      }\n\n      //更新选择数组\n      this.updateSelectComanyInfoMapInfo();\n    },\n  },\n\n  methods: {\n    updateSelectComanyInfoMapInfo() {\n      this.checkedArr.forEach((companyCode=>{\n          //如果选中,取消该公司定义\n          if(this.checkedNames.indexOf(companyCode)>=0){              \n              if(this.unSelectComanyInfoMapInfo.has(companyCode)){\n                  let unselectUserList = this.unSelectComanyInfoMapInfo.get(companyCode);\n                  if(unselectUserList.length==0){\n                      console.log(\"has companyCode:\"+companyCode+\" remove:\"+this.unSelectComanyInfoMapInfo.size);\n                      this.unSelectComanyInfoMapInfo.delete(companyCode); \n                      console.log(\"after remove:\"+this.unSelectComanyInfoMapInfo.size);               \n                  }\n              }\n          }else{//如果都不在选择内\n              this.unSelectComanyInfoMapInfo.set(companyCode,[]);\n          }\n      }));\n    },\n\n    getDealerReportService() {\n      this.headers = [];\n      this.desserts_area = [];\n      this.loadingview =true;\n\n      getDealerReport({\n        area: this.areaparam,\n        msgId: this.msgIDParam,\n        level: 1,\n        readStatus: this.readStatusParam,\n        statisticsStatus: this.statisticsStatusParam,\n        attachmentId: this.attachmentIdParam,\n        dealerType: this.selectTypeValueParam,\n      })\n        .then((res) => {\n          console.log(\"getSuppilerListData receive:\" + JSON.stringify(res));\n\n          if (res.data == null) {\n            console.log(\"data size is 0\");\n            return;\n          }\n\n          this.headers = this.initHeaderData(res.data.dataList);\n          this.desserts_area = this.initBodyData(res.data.dataList);\n\n          this.checkedAll = this.checkedNames.length == this.checkedArr.length;\n        })\n        .catch((res) => {\n          console.log(res);\n        }).finally(()=>{\n          this.loadingview = false;\n        });\n    },\n\n    //构建单个header头信息\n    buildHeaderBean(text, value) {\n      let headerBean = {};\n      headerBean.text = text;\n      headerBean.value = value;\n      headerBean.width = \"10rem\";\n      headerBean.align = \"left\";\n\n      return headerBean;\n    },\n\n    //初始化Header的数据\n    initHeaderData(data) {\n      let headerDataArray = [];\n\n      headerDataArray.push(this.buildHeaderBean(\"经销商编号\", \"supnumber\"));\n      headerDataArray.push(this.buildHeaderBean(\"经销商名称\", \"supname\"));\n      if(this.readStatusParam == this.STATUS_UNREAD){\n          headerDataArray.push(this.buildHeaderBean(\"未读统计\", \"reading\"));\n      }else{\n          headerDataArray.push(this.buildHeaderBean(\"已读统计\", \"reading\"));\n      }   \n      headerDataArray.push(this.buildHeaderBean(\"已回复统计\", \"reply\"));\n\n      let attachNameList = [];\n\n      data.forEach((supplierData)=>{\n          if(supplierData.attachmentStatistics!=null&&supplierData.attachmentStatistics.length>0\n            &&attachNameList.length==0){            \n              supplierData.attachmentStatistics.forEach((attachmentStatistics) => {\n              let attachmentName = attachmentStatistics.attachmentName.slice(\n                attachmentStatistics.attachmentName.lastIndexOf(\"/\") + 1\n              );\n\n              attachNameList.push(\n                this.buildHeaderBean(\n                  \"已下载统计(\" + attachmentName + \")\",\n                  attachmentStatistics.attachmentId\n                )\n              );\n            });          \n          }\n      });  \n\n      attachNameList.forEach((headerBean)=>{\n          headerDataArray.push(headerBean);\n      });\n\n      return headerDataArray;\n    },\n\n    initBodyData(data) {\n      this.checkedArr = [];\n      this.checkedNames = [];\n\n      let dataArray = [];\n      let totalinfo = {};\n      let totalAttachmentStatistics = [];\n\n      let readStatisticsCount = 0,\n        readStatisticsTotalCount = 0;\n      let feedbackStatisticsCount = 0,\n        feedbackStatisticsTotalCount = 0;\n\n      data.forEach((supplierData) => {\n        let bodyBean = {};\n        \n        this.checkedArr.push(supplierData.companyCode);\n        \n        let userInfoList= this.unSelectComanyInfoMapInfo.get(supplierData.companyCode);\n        if(userInfoList==undefined || userInfoList.length>0){\n            this.checkedNames.push(supplierData.companyCode);\n        }\n\n        bodyBean.supnumber = supplierData.companyCode;\n        bodyBean.supname = supplierData.companyName;\n        bodyBean.selected = true;\n\n        if(supplierData.readStatistics==null){\n          bodyBean.readingStatisticsCount = 0;        \n          bodyBean.readingTotalCount= 0;\n          bodyBean.readingPercentage = 0;\n\n        }else{\n          bodyBean.readingStatisticsCount = supplierData.readStatistics.statisticsCount;        \n          bodyBean.readingTotalCount= supplierData.readStatistics.totalCount;\n          bodyBean.readingPercentage = supplierData.readStatistics.percentage;\n        }\n\n        readStatisticsCount += bodyBean.readingStatisticsCount;\n        readStatisticsTotalCount += bodyBean.readingTotalCount;\n\n        if(supplierData.feedBackStatistics==null){\n            bodyBean.replyStatisticsCount = 0;\n            bodyBean.replyTotalCount = 0;\n            bodyBean.replyPercentage = 0;\n        }else{\n            bodyBean.replyStatisticsCount = supplierData.feedBackStatistics.statisticsCount;\n            bodyBean.replyTotalCount = supplierData.feedBackStatistics.totalCount;\n            bodyBean.replyPercentage = supplierData.feedBackStatistics.percentage;\n        }             \n\n        feedbackStatisticsCount += bodyBean.replyStatisticsCount;\n        feedbackStatisticsTotalCount += bodyBean.replyTotalCount;\n        \n        let attachDataList = [];\n\n        if(supplierData.attachmentStatistics!=null){\n            supplierData.attachmentStatistics.forEach(\n              (attachmentStatistics, index) => {\n                let attachData = {};\n                if (totalAttachmentStatistics[index] == undefined) {\n                  totalAttachmentStatistics[index] = {\n                    id: \"\",\n                    statisticsCount: 0,\n                    totalCount: 0,\n                  };\n                }\n\n                attachData.id = attachmentStatistics.attachmentId;\n\n                attachData.valueStatisticsCount = attachmentStatistics.dealerStatistics.statisticsCount;\n                attachData.valueTotalCount = attachmentStatistics.dealerStatistics.totalCount;\n                attachData.valuePercentage = attachmentStatistics.dealerStatistics.percentage;          \n\n                totalAttachmentStatistics[index].id =\n                  attachmentStatistics.attachmentId;\n                totalAttachmentStatistics[index].statisticsCount +=\n                  attachmentStatistics.dealerStatistics.statisticsCount;\n                totalAttachmentStatistics[index].totalCount +=\n                  attachmentStatistics.dealerStatistics.totalCount;\n\n                attachDataList.push(attachData);\n              }\n            );            \n        }\n\n        bodyBean.attachDataList = attachDataList;\n\n        dataArray.push(bodyBean);\n      });\n\n      totalinfo.supnumber = \"-\";\n      totalinfo.supname = \"合计\";\n      totalinfo.selected = true;\n\n      totalinfo.readingStatisticsCount = readStatisticsCount;\n      totalinfo.readingTotalCount = readStatisticsTotalCount;\n      totalinfo.readingPercentage = roundFun((readStatisticsCount * 100) / readStatisticsTotalCount,0);\n\n      totalinfo.replyStatisticsCount = feedbackStatisticsCount;\n      totalinfo.replyTotalCount = feedbackStatisticsTotalCount;\n      totalinfo.replyPercentage = roundFun((feedbackStatisticsCount * 100) / feedbackStatisticsTotalCount,0);\n\n      totalinfo.attachDataList = [];\n      totalAttachmentStatistics.forEach((attachmentStatistics) => {\n        let attachData = {};\n\n        attachData.id = attachmentStatistics.attachmentId;\n        attachData.valueStatisticsCount = attachmentStatistics.statisticsCount;\n        attachData.valueTotalCount = attachmentStatistics.totalCount;\n        attachData.valuePercentage = roundFun((attachmentStatistics.statisticsCount * 100) /\n            attachmentStatistics.totalCount,0);\n\n        totalinfo.attachDataList.push(attachData);\n      });\n\n      dataArray.unshift(totalinfo);\n\n      return dataArray;\n    },\n\n    closeParent(unSelectUsers, companyCode,isNoneSelected) {\n      console.log(\n        \"......closeParent....companyCode\" +\n          companyCode +\n          \" unSelectUsers:\" +\n          JSON.stringify(unSelectUsers)\n      );\n\n      this.dialog_person = false;\n\n      //没有选择1个人\n      if (isNoneSelected) {\n        this.checkedNames.splice(this.checkedNames.indexOf(companyCode), 1);\n        this.unSelectComanyInfoMapInfo.set(companyCode,[]);\n        console.log(\"checkedNames splice:\" + companyCode);\n      }else if(unSelectUsers.length>0){//选择了其中几个人\n        this.unSelectComanyInfoMapInfo.set(companyCode,unSelectUsers);\n        if(this.checkedNames.indexOf(companyCode)<0){\n          this.checkedNames.push(companyCode);\n        }\n      }else{//选择了所有人\n        if(this.unSelectComanyInfoMapInfo.has(companyCode)){\n            this.unSelectComanyInfoMapInfo.delete(companyCode);          \n        }\n      }\n\n      for (let [key, value] of this.unSelectComanyInfoMapInfo.entries()) {\n        console.log(\"selectCompanyInfo:\" + value, key);\n      }\n    },\n    //关闭\n    bt_close() {\n      console.log(\"......关闭按钮.......\");\n      let tmpSelectComanyInfoMapInfo = this.unSelectComanyInfoMapInfo;\n      this.$emit(\"closedChild\", tmpSelectComanyInfoMapInfo);\n    },\n    //当table row click时触发 - 表示全部，此时的传值\n    clickRow: function (type, id) {\n      console.log(\"....clickRow....type:\" + type + \" id:\" + id);\n      this.selectCompanyCode = id == \"-\" ? \"\" : id;\n      this.selectStatisticsStatus = type;\n      this.dialog_person = true;\n    },\n    changeAllChecked: function () {\n      if (this.checkedAll) {\n        this.checkedArr.forEach((info) => {\n          this.checkedNames.push(info);\n        });\n\n        console.log(\"checkedArr:\" + JSON.stringify(this.checkedArr));\n        console.log(\"checkedNames:\" + JSON.stringify(this.checkedNames));\n      } else {\n        this.checkedNames = [];\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"],"sourceRoot":"src/components"}]}