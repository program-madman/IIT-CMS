{"remainingRequest":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/src/views/page/messageCenter.vue","mtime":1640475499754},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/cms_code/my-message/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL2xpdWd1YW5naHVpL0RvY3VtZW50cy9jbXNfY29kZS9teS1tZXNzYWdlL2Ntcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldFVzZXJNZXNzYWdlTGlzdCwgbWFya0FsbE1lc3NhZ2VSZWFkLCBtYXJrTWVzc2FnZVJlYWRPbmUgfSBmcm9tICJAL2FwaS9nZXREYXRhLmpzIjsKaW1wb3J0IHsganVtcFRvRGV0YWlsIH0gZnJvbSAiQC91dGlscy9jb21tb24uanMiOwppbXBvcnQgeyBnZXRNc2dSZW1pbmRlclN0YXR1c0Rlc2MgfSBmcm9tICJAL3V0aWxzL2FydGljbGVVdGlscy5qcyI7CmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiQC91dGlscy9ldmVudC1idXMiOwppbXBvcnQgeyBEZWJvdW5jZSB9IGZyb20gIkAvdXRpbHMvdG9vbHMuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8v5Yid5aeL5YyWLi4uLi4g6ZyA6KaB5ZCX77yfCiAgICB0aGlzLm1lc3NhZ2VNYXAgPSBuZXcgTWFwKCk7CiAgICB0aGlzLm1lc3NhZ2VEYXRlcyA9IFtdOwogICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7CiAgICB0aGlzLmxvYWRVc2VyTWVzc2FnZSh0aGlzLmN1cnJlbnRQYWdlLCB0aGlzLnBhZ2VOdW1iZXIpOwogICAgRXZlbnRCdXMuJGVtaXQoInJlZnJlc2hVbnJlYWQiLCAicmVmcmVzaCIpOwogIH0sCiAgY29tcG9uZW50czogewogICAgcGFnZUxvYWRlcjogZnVuY3Rpb24gcGFnZUxvYWRlcigpIHsKICAgICAgcmV0dXJuIGltcG9ydCgiLi9hcnRpY2xlTGlzdC9wYWdlTG9hZGVyLnZ1ZSIpOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2VNYXA6IG5ldyBNYXAoKSwKICAgICAgbWVzc2FnZURhdGVzOiBbXSwKICAgICAgcGFnZU51bWJlcjogMTAsCiAgICAgIGN1cnJlbnRQYWdlOiAxCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLm1lc3NhZ2VNYXAgPSBuZXcgTWFwKCk7CiAgICAgIHRoaXMubWVzc2FnZURhdGVzID0gW107CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOwogICAgfSwKICAgIGdldENvbG9yOiBmdW5jdGlvbiBnZXRDb2xvcihtc2dTdGF0dXMpIHsKICAgICAgaWYgKG1zZ1N0YXR1cyA9PT0gIjAiKSByZXR1cm4gIiM5OTk5OTkiO2Vsc2UgaWYgKG1zZ1N0YXR1cyA9PT0gIjQiKSByZXR1cm4gIiNGNDQzMzYiO2Vsc2UgaWYgKG1zZ1N0YXR1cyA9PT0gIi0xIikgcmV0dXJuICIjMTg2N0MwIjtlbHNlIHJldHVybiAiIzE4NjdDMCI7CiAgICB9LAogICAgLy9nbyB0byBhcnRpY2xlIGRldGFpbCBwYWdlCiAgICB0b0RldGFpbDogZnVuY3Rpb24gdG9EZXRhaWwobWVzc2FnZSkgewogICAgICBqdW1wVG9EZXRhaWwodGhpcy4kcm91dGVyLCBtZXNzYWdlLm1lc3NhZ2VJZCk7CgogICAgICBpZiAobWVzc2FnZS5pc1JlYWQgPT09IGZhbHNlKSB7CiAgICAgICAgdGhpcy5tYXJrT25jZVJlYWQobWVzc2FnZSk7CiAgICAgIH0KICAgIH0sCiAgICBvbkxvYWRNb3JlOiBmdW5jdGlvbiBvbkxvYWRNb3JlKCkgewogICAgICBpZiAodGhpcy5sb2FkaW5nID09IHRydWUpIHJldHVybjsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5sb2FkVXNlck1lc3NhZ2UodGhpcy5jdXJyZW50UGFnZSwgdGhpcy5wYWdlTnVtYmVyKTsKICAgIH0sCiAgICBtYXJrQWxsUmVhZDogRGVib3VuY2UoZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgbWFya0FsbE1lc3NhZ2VSZWFkKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UgIT0gbnVsbCAmJiByZXNwb25zZS5jb2RlID09PSAwICYmIHJlc3BvbnNlLm1lc3NhZ2UgPT09ICJzdWNjZXNzIikgewogICAgICAgICAgX3RoaXMucmVzZXQoKTsKCiAgICAgICAgICBfdGhpcy5sb2FkVXNlck1lc3NhZ2UoX3RoaXMuY3VycmVudFBhZ2UsIF90aGlzLnBhZ2VOdW1iZXIpOwoKICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCJtYWtlQWxsTXNnUmVhZCIsICJhbGwgbWVzc2FnZSByZWFkZWQiKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKCk7CiAgICB9LCA1MDApLAogICAgbWFya09uY2VSZWFkOiBmdW5jdGlvbiBtYXJrT25jZVJlYWQobWVzc2FnZSkgewogICAgICBtYXJrTWVzc2FnZVJlYWRPbmUobWVzc2FnZS5pZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UgIT0gbnVsbCAmJiByZXNwb25zZS5jb2RlID09PSAwICYmIHJlc3BvbnNlLm1lc3NhZ2UgPT09ICJzdWNjZXNzIikgewogICAgICAgICAgRXZlbnRCdXMuJGVtaXQoIm1hcmtTaW5nbGVSZWFkIiwgIm9uZSBtZXNzYWdlIHJlYWRlZCIpOwogICAgICAgICAgbWVzc2FnZS5pc1JlYWQgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goKTsKICAgIH0sCiAgICBsb2FkVXNlck1lc3NhZ2U6IGZ1bmN0aW9uIGxvYWRVc2VyTWVzc2FnZShwYWdlTnVtLCBwYWdlU2l6ZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGdldFVzZXJNZXNzYWdlTGlzdChwYWdlTnVtLCBwYWdlU2l6ZSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIuZmlsbERhdGFzKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goKTsKICAgIH0sCiAgICBmaWxsRGF0YXM6IGZ1bmN0aW9uIGZpbGxEYXRhcyhyZXNwb25zZSkgewogICAgICBjb25zb2xlLmRlYnVnKCJyZXNwb25lIiArIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CgogICAgICBpZiAocmVzcG9uc2UgPT0gbnVsbCB8fCByZXNwb25zZS5kYXRhID09IG51bGwgfHwgcmVzcG9uc2UuZGF0YS5sZW5ndGggPT0gMCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UrKzsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBtZXNzYWdlID0gcmVzcG9uc2UuZGF0YVtpXTsKICAgICAgICB2YXIgZGF0ZSA9IG1lc3NhZ2Uub3BlcmF0aW9uVGltZS5zcGxpdCgiICIpOwogICAgICAgIHZhciBrZXkgPSAiIjsKICAgICAgICBjb25zb2xlLmxvZygiIyMjIyMjIyMgZGF0ZSA9PT09PT09PT0+ICMjIyMjIyMgIiArIEpTT04uc3RyaW5naWZ5KGRhdGUpKTsKCiAgICAgICAgaWYgKGRhdGUgIT0gbnVsbCAmJiBfdHlwZW9mKGtleSkgIT0gdW5kZWZpbmVkICYmIGRhdGUubGVuZ3RoID49IDIpIHsKICAgICAgICAgIGtleSA9IGRhdGVbMF07CiAgICAgICAgICBtZXNzYWdlLnRpbWUgPSBkYXRlWzFdOwogICAgICAgICAgbWVzc2FnZS5wcmVmaXhUaW1lID0ga2V5OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBrZXkgPSBtZXNzYWdlLm9wZXJhdGlvblRpbWU7CiAgICAgICAgfQoKICAgICAgICBpZiAoa2V5ICE9IG51bGwgJiYgX3R5cGVvZihrZXkpICE9IHVuZGVmaW5lZCAmJiBrZXkgIT0gIiIpIHsKICAgICAgICAgIHZhciBsaXN0ID0gdGhpcy5tZXNzYWdlTWFwLmdldChrZXkpOwoKICAgICAgICAgIGlmIChsaXN0ID09IG51bGwgfHwgX3R5cGVvZihsaXN0KSA9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgbGlzdCA9IFtdOwogICAgICAgICAgfQoKICAgICAgICAgIG1lc3NhZ2UuY29sb3IgPSBtZXNzYWdlLmlzUmVhZCA/ICJncmV5IiA6ICJyZWQiOwogICAgICAgICAgbWVzc2FnZS5jYXJkQ29sb3IgPSBtZXNzYWdlLmlzUmVhZCA/ICJncmV5IiA6ICJibHVlLWdyZXkiOyAvLy0tLS0tIG1vY2sgZWZmZWN0IC0tLS0KICAgICAgICAgIC8vbWVzc2FnZS5jb2xvciA9IGkgJSAyID09PSAwID8gImdyZXkiIDogInJlZCI7CiAgICAgICAgICAvL21lc3NhZ2UuY2FyZENvbG9yID0gaSAlIDIgPT09IDAgPyAiZ3JleSIgOiAiaW5kaWdvIjsKICAgICAgICAgIC8vbWVzc2FnZS5pc1JlYWQgPSBpICUgMiA9PT0gMCA/IHRydWUgOiBmYWxzZTsKICAgICAgICAgIC8vLS0tLS0gbW9jayBlZmZlY3QgLS0tLQoKICAgICAgICAgIG1lc3NhZ2UudHlwZVRleHQgPSBnZXRNc2dSZW1pbmRlclN0YXR1c0Rlc2MobWVzc2FnZS5vcGVyYXRpb24pOwogICAgICAgICAgY29uc29sZS5sb2coInR5cGVUZXh0ID09PT09PT09PT0+IiArIG1lc3NhZ2UuY29sb3IpOwogICAgICAgICAgbGlzdC5wdXNoKG1lc3NhZ2UpOwogICAgICAgICAgdGhpcy5tZXNzYWdlTWFwLnNldChrZXksIGxpc3QpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5tZXNzYWdlRGF0ZXMgPSBBcnJheS5mcm9tKHRoaXMubWVzc2FnZU1hcC5rZXlzKCkpOyAvL2FsZXJ0KCJvbiByZXNwb25zZSBsZW5ndGggPj4+PiAiK0FycmF5LmZyb20odGhpcy5tZXNzYWdlRGF0ZXMpLmxlbmd0aCkKICAgIH0KICB9LAogIC8vU2V0IHRoZSBsZW5ndGggb2YgYSBwYXJhZ3JhcGgKICBmaWx0ZXJzOiB7CiAgICBsZW5ndGg6IGZ1bmN0aW9uIGxlbmd0aCh0ZXh0LCBfbGVuZ3RoKSB7CiAgICAgIHZhciBzdWZmaXggPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6ICIuLi4iOwoKICAgICAgaWYgKCF0ZXh0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGV4dC5sZW5ndGggPD0gX2xlbmd0aCkgewogICAgICAgIHJldHVybiB0ZXh0OwogICAgICB9CgogICAgICByZXR1cm4gKHRleHQgKyAiIikucmVwbGFjZSgvXG4vZywgIjxici8+Iikuc3Vic3RyaW5nKDAsIF9sZW5ndGgpICsgc3VmZml4OwogICAgfQogIH0KfTs="},{"version":3,"sources":["messageCenter.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container fluid class=\"ml-0 mx-auto\">\n    <v-card class=\"mx-auto blue\">\n      <v-list two-line>\n        <v-card-actions>\n          <v-btn\n            v-if=\"messageDates.length > 0\"\n            min-width=\"105px\"\n            height=\"36px\"\n            depressed\n            dark\n            outlined\n            color=\"#1867C0FF\"\n            style=\"margin-left: 8px; margin-top: 1px\"\n            @click=\"markAllRead\"\n            >全部已读</v-btn\n          >\n        </v-card-actions>\n        <v-subheader\n          class=\"subtitle-1 my-n2\"\n          v-text=\"'还没有任何消息'\"\n          v-if=\"messageDates.length === 0\"\n        />\n\n        <template v-for=\"date in messageDates\">\n          <v-subheader\n            class=\"subtitle-2 my-n2\"\n            :key=\"date\"\n            v-text=\"date\"\n          ></v-subheader>\n          <template v-for=\"msg in messageMap.get(date)\">\n            <v-row :key=\"msg.id\">\n              <v-list-item class=\"item\">\n                <v-list-item-content @click=\"toDetail(msg)\">\n                  <v-row class=\"message-list-text\">\n                    <span class=\"mt-n2\" v-if=\"msg.isRead === false\">\n                      <v-icon large color=\"red darken-3\"\n                        >mdi-circle-small</v-icon\n                      >\n                    </span>\n                    <span class=\"ml-9\" v-else></span>\n                    <span class=\"ml-2 message-list-releasetime-text\"\n                      >{{ msg.releaseTime }}\n                    </span>\n                    <span class=\"ml-2 message-list-time-text\">{{\n                      msg.time\n                    }}</span>\n                    <span class=\"ml-2 message-list-time-text\">{{\n                      msg.operator\n                    }}</span>\n                    <span class=\"ml-2 message-list-operate-type-text\"\n                      >{{ msg.typeText }} </span\n                    ><a class=\"ml-3 message-list-title-text\"\n                      >{{ msg.messageTitle }}\n                    </a>\n                  </v-row>\n                  <v-divider class=\"my-sm-auto\"></v-divider>\n                </v-list-item-content>\n              </v-list-item>\n            </v-row>\n          </template>\n        </template>\n      </v-list>\n    </v-card>\n    <page-loader @onLoadMore=\"onLoadMore\" />\n  </v-container>\n</template>\n\n<script>\nimport {\n  getUserMessageList,\n  markAllMessageRead,\n  markMessageReadOne,\n} from \"@/api/getData.js\";\nimport { jumpToDetail } from \"@/utils/common.js\";\nimport { getMsgReminderStatusDesc } from \"@/utils/articleUtils.js\";\nimport { EventBus } from \"@/utils/event-bus\";\nimport { Debounce } from \"@/utils/tools.js\";\nexport default {\n  mounted() {\n    //初始化..... 需要吗？\n    this.messageMap = new Map();\n    this.messageDates = [];\n    this.currentPage = 1;\n    this.loadUserMessage(this.currentPage, this.pageNumber);\n    EventBus.$emit(\"refreshUnread\", \"refresh\");\n  },\n  components: {\n    pageLoader: () => import(\"./articleList/pageLoader.vue\"),\n  },\n  data: () => ({\n    messageMap: new Map(),\n    messageDates: [],\n    pageNumber: 10,\n    currentPage: 1,\n  }),\n  methods: {\n    reset() {\n      this.messageMap = new Map();\n      this.messageDates = [];\n      this.currentPage = 1;\n    },\n\n    getColor(msgStatus) {\n      if (msgStatus === \"0\") return \"#999999\";\n      else if (msgStatus === \"4\") return \"#F44336\";\n      else if (msgStatus === \"-1\") return \"#1867C0\";\n      else return \"#1867C0\";\n    },\n\n    //go to article detail page\n    toDetail(message) {\n      jumpToDetail(this.$router, message.messageId);\n      if (message.isRead === false) {\n        this.markOnceRead(message);\n      }\n    },\n\n    onLoadMore() {\n      if (this.loading == true) return;\n      this.loading = true;\n      this.loadUserMessage(this.currentPage, this.pageNumber);\n    },\n\n    markAllRead: Debounce(function () {\n\n\n      markAllMessageRead()\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            this.reset();\n            this.loadUserMessage(this.currentPage, this.pageNumber);\n            EventBus.$emit(\"makeAllMsgRead\", \"all message readed\");\n          }\n        })\n        .catch();\n    }, 500),\n\n    markOnceRead(message) {\n      markMessageReadOne(message.id)\n        .then((response) => {\n          if (\n            response != null &&\n            response.code === 0 &&\n            response.message === \"success\"\n          ) {\n            EventBus.$emit(\"markSingleRead\", \"one message readed\");\n            message.isRead = true;\n          }\n        })\n        .catch();\n    },\n\n    loadUserMessage(pageNum, pageSize) {\n      getUserMessageList(pageNum, pageSize)\n        .then((response) => {\n          this.fillDatas(response);\n        })\n        .catch();\n    },\n\n    fillDatas(response) {\n      console.debug(\"respone\" + JSON.stringify(response));\n      if (\n        response == null ||\n        response.data == null ||\n        response.data.length == 0\n      ) {\n        return;\n      }\n      this.loading = false;\n      this.currentPage++;\n      for (let i = 0; i < response.data.length; i++) {\n        let message = response.data[i];\n        let date = message.operationTime.split(\" \");\n        let key = \"\";\n        console.log(\"######## date =========> ####### \" + JSON.stringify(date));\n        if (date != null && typeof key != undefined && date.length >= 2) {\n          key = date[0];\n          message.time = date[1];\n          message.prefixTime = key;\n        } else {\n          key = message.operationTime;\n        }\n        if (key != null && typeof key != undefined && key != \"\") {\n          let list = this.messageMap.get(key);\n          if (list == null || typeof list == undefined) {\n            list = [];\n          }\n          message.color = message.isRead ? \"grey\" : \"red\";\n          message.cardColor = message.isRead ? \"grey\" : \"blue-grey\";\n          //----- mock effect ----\n          //message.color = i % 2 === 0 ? \"grey\" : \"red\";\n          //message.cardColor = i % 2 === 0 ? \"grey\" : \"indigo\";\n          //message.isRead = i % 2 === 0 ? true : false;\n          //----- mock effect ----\n          message.typeText = getMsgReminderStatusDesc(message.operation);\n          console.log(\"typeText ==========>\" + message.color);\n          list.push(message);\n          this.messageMap.set(key, list);\n        }\n      }\n      this.messageDates = Array.from(this.messageMap.keys());\n      //alert(\"on response length >>>> \"+Array.from(this.messageDates).length)\n    },\n  },\n\n  //Set the length of a paragraph\n  filters: {\n    length(text, length, suffix = \"...\") {\n      if (!text) {\n        return;\n      }\n      if (text.length <= length) {\n        return text;\n      }\n      return (text + \"\").replace(/\\n/g, \"<br/>\").substring(0, length) + suffix;\n    },\n  },\n};\n</script>\n<style scoped>\n.message-list-text {\n  font-family: PingFang SC;\n  font-weight: semibold;\n  font-size: 14px !important;\n  line-height: 20px;\n  letter-spacing: 0px;\n  text-align: left;\n}\n.message-list-releasetime-text {\n  opacity: 0.800000011920929;\n  color: #333333;\n}\n.message-list-time-text {\n  color: #666666;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-operate-type-text {\n  color: #333333;\n  font-family: Roboto;\n  font-weight: regular;\n}\n.message-list-title-text {\n  color: #1867c0;\n  font-family: Roboto;\n  font-weight: regular;\n}\n</style>"],"sourceRoot":"src/views/page"}]}