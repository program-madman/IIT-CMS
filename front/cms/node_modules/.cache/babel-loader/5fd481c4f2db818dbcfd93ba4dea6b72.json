{"remainingRequest":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/babel-loader/lib/index.js!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/components/statisticalReportPersonView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/src/components/statisticalReportPersonView.vue","mtime":1641453010571},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuguanghui/Documents/IIT/2023 summary course/iit-project/IIT-CMS/front/cms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["statisticalReportPersonView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card class=\"mx-auto\">\n    <v-toolbar dense color=\"#1867C0\">\n      <v-btn icon>\n        <v-icon color=\"white\" @click=\"bt_close\"> mdi-close </v-icon>\n      </v-btn>\n      <v-toolbar-title class=\"body-1 white--text\">统计报告</v-toolbar-title>\n    </v-toolbar>\n    <div class=\"pl-8 pr-8 pt-4\">\n      <span class=\"body-1 grey--text text--darken-3\"> 人员 </span>\n      <template>\n        <loading v-if=\"loadingview\" /> \n        <v-data-table\n          :headers=\"headers\"\n          :items=\"desserts_area\"\n          item-key=\"name\"\n          v-else\n          :search=\"search_sele\"\n          class=\"mt-8 elevation-1\"\n          hide-default-footer\n        >\n          <template v-slot:body=\"{ items }\">\n            <tbody v-if=\"items.length > 0\">\n              <tr v-for=\"(item, iindex) in desserts_area\" :key=\"item.userId\">\n                <td>\n                  <template\n                    v-if=\"statisticsStatusParam == STATISTICSSTATUS_TYPE_READ&& readStatusParam==STATUS_UNREAD\"\n                  >\n                    <v-checkbox\n                      v-if=\"iindex === 0\"\n                      v-model=\"checkedAll\"\n                      :label=\"item.name\"\n                      @change=\"changeAllChecked\"\n                    ></v-checkbox>\n                    <v-checkbox\n                      v-else\n                      v-model=\"checkedNames\"\n                      :value=\"item.userId\"\n                      :label=\"item.name\"\n                    ></v-checkbox>\n                  </template>\n                  <template v-else>\n                    {{ item.name }}\n                  </template>\n                </td>\n                <td>{{ item.position }}</td>\n                <td>{{ item.reading }}</td>\n                <td v-if=\"feebackBackType == 2\">  \n                    <template v-if=\"iindex!=0&&item.reply!=''\">                    \n                      <v-progress-circular v-if=\"isRequestDownloadUrl\" class=\"ml-8\"  :indeterminate=\"isRequestDownloadUrl\" color=\"primary\"/>                     \n                      <v-btn v-else class=\"text-caption blue--text text--darken-3\" @click=\"downloadfile(item.replyAttachmentId)\">\n                        {{ item.reply }}\n                      </v-btn>\n                    </template>\n                    <template v-else-if=\"iindex==0\">{{item.reply}}</template>\n                    <template v-else>未回复</template>\n                </td>\n                <td v-else-if=\"feebackBackType!=4\">{{ item.reply }}</td>\n\n                <td\n                  v-for=\"attachment in item.attachDataList\"\n                  :key=\"attachment.id\"\n                >\n                  {{ attachment.value }}\n                </td>\n              </tr>\n            </tbody>\n            <tbody v-else>\n              <tr>\n                <td :colspan=\"headers.length\" style=\"text-align: center\">\n                  No Results Here!\n                </td>\n              </tr>\n            </tbody>\n          </template>\n        </v-data-table>\n\n        <v-divider class=\"#E4E8EB\"></v-divider>\n      </template>\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport { getReportPosition,getDownloadUrlInADView } from \"@/api/getData.js\";\nimport { composeStatisticsShowText,textEllipsis } from \"@/utils/stringUtils.js\";\nimport { downloadFileByUrl } from \"@/utils/download.js\"\nimport { showSnackbar } from \"@/utils/snackbar.js\";\n\nexport default {\n  name: \"statisticalReportPersonView\",\n  components: {    \n    loading: () => import(\"@/components/base/loading.vue\"),\n  },\n  props: {\n    openStatus: {\n      type: Boolean,\n    },\n    areaparam: {\n      type: Array,\n    },\n    msgIDParam: {\n      type: String,\n    },\n    readStatusParam: {\n      type: Number,\n    },\n    statisticsStatusParam: {\n      type: Number,\n    },\n    attachmentIdParam: {\n      type: Number,\n    },\n    statisticsSelectParam: {\n      type: Object,\n    },\n    selectTypeValueParam:{\n      type:String,\n    },\n    companyCodeParam: {\n      type: String,\n    },\n    unSelectCompanyInfos: {\n      type: Map,\n    },\n    searchContentParam:{\n      type:String\n    },\n    //反馈类型\n    feebackBackType: {\n      type: Number,\n    },\n  },\n\n  data() {\n    return {\n      //状态：已读、未读\n      STATUS_READ: 0,\n      STATUS_UNREAD: 1,\n\n      //统计查询类型 0: 阅读类型查询 1: 附件类型查询 2: 回复类型查询\n      STATISTICSSTATUS_TYPE_READ: 0,\n      STATISTICSSTATUS_TYPE_ATTACH: 1,\n      STATISTICSSTATUS_TYPE_REPLY: 2,\n\n      loadingview:true,\n\n      remindDialog: false,\n      search_sele: \"\",\n      selected_area: [],\n      expanded: [],\n      headers: [],\n\n      desserts_area: [],\n\n      //start 全选参数\n      checkedAll: true,\n      //所有选中的userId\n      checkedNames: [],\n      //所有用户 userid: userInfo\n      checkedArr: [],\n      //所有用户 companyCode:List<userInfo>\n      allUserInfoByCompanyCode : new Map(),\n      //end 全选参数\n      //是否正在请求url\n      isRequestDownloadUrl:false,\n    };\n  },\n\n  mounted() {\n    this.getDealerReportService();\n  },\n\n  watch: {\n    openStatus(newV) {\n      console.log(\"openStatus:\" + newV);\n      //由不可见到可见\n      if (newV) {\n        this.getDealerReportService();\n      }\n    },\n    checkedNames: function () {\n      if (this.checkedNames.length == this.checkedArr.length) {\n        this.checkedAll = true;\n      } else {\n        this.checkedAll = false;\n      }\n\n      console.log(\"checkedNames checkedAll:\" + this.checkedAll+\" checkNames[\"+JSON.stringify(this.checkedNames)+\"]  this.checkedArr:\"+JSON.stringify(this.checkedArr));\n    },\n  },\n\n  methods: {\n    //查用户\n    getDealerReportService() {\n      this.headers = [];\n      this.desserts_area = [];\n      this.loadingview  = true;\n      this.checkedArr = [];\n      this.allUserInfoByCompanyCode.clear();\n\n      console.log(\"statisticsStatusParam:\"+this.statisticsStatusParam);\n\n      getReportPosition(this.msgIDParam,this.areaparam,this.selectTypeValueParam,this.searchContentParam,this.companyCodeParam,this.readStatusParam,this.statisticsStatusParam,this.attachmentIdParam)\n      .then((res) => {\n          console.log(\"getSuppilerListData receive:\" + JSON.stringify(res));\n\n          if (res.data == null) {\n            console.log(\"data size is 0\");\n            return;\n          }\n\n          this.headers = this.initHeaderData(res.data.reports);\n          this.desserts_area = this.initBodyData(res.data.reports);\n          this.checkedAll = this.checkedNames.length == this.checkedArr.length;\n        })\n        .catch((res) => {\n          console.log(res);\n        }).finally(()=>{\n            this.loadingview = false;\n        });\n    },\n\n    //关闭\n    bt_close() {\n      console.log(\n        \"......关闭按钮....companyCodeParam:\" +\n          this.companyCodeParam +\n          \" checkedNames:\" +\n          JSON.stringify(this.checkedNames)\n      );\n\n      let companyCode = this.companyCodeParam;            \n      let unSelectUsers = [];\n\n      this.checkedArr.forEach((userInfo)=>{\n          if(this.checkedNames.indexOf(userInfo.userId)<0){\n              unSelectUsers.push(userInfo.userId);\n          }\n      });\n\n      console.log(        \n          \"unSelectUsers:\" +\n          JSON.stringify(unSelectUsers)\n      );\n\n      //合计内容返回\n      if(companyCode==''){\n          this.$emit(\"closeParentInAll\",this.filterUnselectInfo());                  \n      }else{//具体某个公司的操作数据返回\n          this.$emit(\"closedChild\", unSelectUsers, companyCode,unSelectUsers.length==this.checkedArr.length);\n      }\n    },\n    filterUnselectInfo(){\n        let unSelectCompanyMapping  = new Map();\n        let resultSelectCompnayMapping = new Map();\n        \n        //未选中的用户信息\n        this.checkedArr.forEach((userInfo)=>{\n\n            if(this.checkedNames.indexOf(userInfo.userId)>=0){\n                return;\n            }\n\n            let userList = unSelectCompanyMapping.get(userInfo.companyCode);\n            if(!userList){\n                userList = new Array()\n                unSelectCompanyMapping.set(userInfo.companyCode,userList);\n            }\n\n            userList.push(userInfo.userId);          \n        });\n\n        console.log(\"unSelectCompanyMapping:\"+JSON.stringify(unSelectCompanyMapping));\n\n        for (let [key, value] of unSelectCompanyMapping.entries()) {\n            let sourceUserList = this.allUserInfoByCompanyCode.get(key);\n            //所有用户未选中,将该公司代码加入\n            if(sourceUserList.length==value.length){\n              resultSelectCompnayMapping.set(key,[]);\n            }else{//部分用户选入\n              resultSelectCompnayMapping.set(key,value);\n            }\n        }\n\n        return resultSelectCompnayMapping;\n    },\n    //构建单个header头信息\n    buildHeaderBean(text, value) {\n      let headerBean = {};\n      headerBean.text = textEllipsis(text,20);\n      headerBean.value = value;\n      headerBean.width = \"10rem\";\n      headerBean.align = \"left\";\n      return headerBean;\n    },\n    //初始化Header的数据\n    initHeaderData(data) {\n      let headerDataArray = [];\n\n      headerDataArray.push(this.buildHeaderBean(\"姓名\", \"userName\"));\n      headerDataArray.push(this.buildHeaderBean(\"职务\", \"position\"));\n      if(this.readStatusParam==this.STATUS_UNREAD){\n          headerDataArray.push(this.buildHeaderBean(\"未读统计\", \"reading\"));\n      }else{\n          headerDataArray.push(this.buildHeaderBean(\"已读统计\", \"reading\"));\n      } \n      //无需回复，不需要展示已回复统计   \n      if(this.feebackBackType!=4){\n        headerDataArray.push(this.buildHeaderBean(\"已回复统计\", \"reply\"));\n      }\n\n      if (data[0].attachmentReports==null||data[0].attachmentReports.length == 0) {\n        console.log(\"initHeaderData:attachmentStatistics is 0\");\n        return headerDataArray;\n      }\n\n      data[0].attachmentReports.forEach((attachmentStatistics) => {\n        let attachmentName = attachmentStatistics.attachmentName.slice(\n          attachmentStatistics.attachmentName.lastIndexOf(\"/\") + 1\n        );\n\n        headerDataArray.push(\n          this.buildHeaderBean(\n            \"已下载统计(\" + attachmentName + \")\",\n            attachmentStatistics.attachmentId\n          )\n        );\n      });\n      return headerDataArray;\n    },\n    \n    /**\n     * 下载文件\n     */\n    downloadfile(replyAttachmentId){\n\n      this.isRequestDownloadUrl = true;\n\n      getDownloadUrlInADView(this.msgIDParam,replyAttachmentId)\n          .then((res) => { \n              if(typeof res !== \"undefined\" && res !== null && res.code === 0 && typeof res.data !== \"undefined\" && res.data !== null && res.data !== \"\") {\n                  downloadFileByUrl(res.data)   \n              }else {\n                  showSnackbar('下载失败，请稍候重试');\n              }\n          })\n          .catch(() => {\n              showSnackbar('下载失败，请稍候重试');\n          })\n          .finally(() => {\n              this.isRequestDownloadUrl = false;\n          });  \n    },\n\n    /**\n     * 构造本地数据映射，方便查找\n     */\n    constructLocalMapping(personData){      \n        let localUserInfoDefine={userId:personData.userId,companyCode:personData.companyCode};\n\n        this.checkedArr.push(localUserInfoDefine);\n        \n        let userList = this.allUserInfoByCompanyCode.get(personData.companyCode);\n        if(userList==null||userList==undefined){\n            userList = new Array()\n            this.allUserInfoByCompanyCode.set(personData.companyCode,userList);\n        }\n\n        userList.push(localUserInfoDefine);\n    },\n\n    initBodyData(data) {\n      this.checkedNames = [];\n      let dataArray = [];\n      let totalinfo = {};\n      let totalAttachmentStatistics = [];\n\n      let readStatisticsCount = 0;\n      let readStatisticsTotalCount = 0;\n      let feedbackStatisticsCount = 0, feedbackStatisticsTotalCount = 0;     \n\n      for (let [key, value] of this.unSelectCompanyInfos.entries()) {\n          console.log(\"initHeaderData --- : companyCode:\"+key+\" unSelectCompanyInfos \"+JSON.stringify(value));\n      }\n\n      console.log(\"initHeaderData:feebackBackType is \"+this.feebackBackType);\n\n      data.forEach((personData) => {\n          let bodyBean = {};\n\n          this.constructLocalMapping(personData);\n\n          let unselectUsersInCompany = this.unSelectCompanyInfos.get(personData.companyCode);\n\n          if (\n            unselectUsersInCompany == undefined ||\n            (unselectUsersInCompany.length>0 && unselectUsersInCompany.indexOf(personData.userId) < 0)\n          ) {\n              this.checkedNames.push(personData.userId);\n          }\n\n          bodyBean.userId = personData.userId;\n          bodyBean.name = personData.userName;\n          bodyBean.position = personData.position;\n          bodyBean.selected = true;\n          bodyBean.replyAttachmentId = personData.replyAttachmentId;       \n\n          bodyBean.reading =\n            personData.haveReadStatus == 1 ? \"已读\" : \"未读\";\n          \n          //回执类:已读、未读\n          if (this.feebackBackType == 0) {\n            bodyBean.reply =\n              personData.haveFeedbackStatus == 1\n                ? \"已读\"\n                : \"未读\";\n            //文本回复:读者回复的文本内容\n          } else if (this.feebackBackType == 1 || this.feebackBackType == 3) {\n            if(personData.replyContent==undefined){\n                bodyBean.reply = \"未回复\";               \n            }else{\n                bodyBean.reply = personData.replyContent;\n            }\n            // //附件回复\n          } else if (this.feebackBackType == 2) {\n            if(personData.replyContent==undefined){\n                bodyBean.reply = '';   \n            }else{\n                bodyBean.reply = personData.replyContent.slice(personData.replyContent.lastIndexOf(\"/\") + 1);\n                bodyBean.reply = textEllipsis(bodyBean.reply,20);\n            }\n\n          } else {\n            bodyBean.reply = \"\";\n          }\n\n          readStatisticsCount += personData.haveReadStatus;\n          readStatisticsTotalCount += 1;\n\n          feedbackStatisticsCount +=personData.haveFeedbackStatus;\n          feedbackStatisticsTotalCount += 1;\n\n          let attachDataList = [];     \n\n          personData.attachmentReports.forEach(\n            (attachmentStatistics, index) => {\n\n              let attachData = {};\n              if (totalAttachmentStatistics[index] == undefined) {\n                totalAttachmentStatistics[index] = { id: \"\",statisticsCount: 0,totalCount: 0,};\n              }              \n\n              attachData.value = attachmentStatistics.haveDownloadStatus == 1 ? \"已下载\": \"未下载\";\n\n              totalAttachmentStatistics[index].statisticsCount +=attachmentStatistics.haveDownloadStatus;\n              totalAttachmentStatistics[index].totalCount += 1;\n\n              attachDataList.push(attachData);\n            }\n          );\n\n          bodyBean.attachDataList = attachDataList;\n\n          dataArray.push(bodyBean);\n      });\n\n      totalinfo.userId = \"-1\";\n      totalinfo.name = \"合计\";\n      totalinfo.position = \"-\";\n      totalinfo.selected = true;\n\n      if(this.readStatusParam==this.STATUS_UNREAD){\n          totalinfo.reading = composeStatisticsShowText(readStatisticsTotalCount-readStatisticsCount,readStatisticsTotalCount,100);\n      }else{\n          totalinfo.reading = composeStatisticsShowText(readStatisticsCount,readStatisticsTotalCount,100);\n      }\n      totalinfo.reply = composeStatisticsShowText(feedbackStatisticsCount,feedbackStatisticsTotalCount,(feedbackStatisticsCount * 100) / feedbackStatisticsTotalCount);\n\n      totalinfo.attachDataList = [];\n      totalAttachmentStatistics.forEach((attachmentStatistics) => {\n        let attachData = {};\n\n        attachData.id = attachmentStatistics.attachmentId;\n        attachData.value = composeStatisticsShowText(attachmentStatistics.statisticsCount,attachmentStatistics.totalCount,(attachmentStatistics.statisticsCount * 100) /attachmentStatistics.totalCount);\n\n        totalinfo.attachDataList.push(attachData);\n      });\n\n      dataArray.unshift(totalinfo);\n\n      return dataArray;\n    },\n    changeAllChecked: function () {\n      console.log(\n        \"checkedAll:\" +\n          this.checkedAll +\n          \" checkedNames:\" +\n          JSON.stringify(this.checkedNames) +\n          \"  checkedArr:\" +\n          JSON.stringify(this.checkedArr)\n      );\n\n      if (this.checkedAll) {\n        this.checkedArr.forEach((userInfo)=>{\n            this.checkedNames.push(userInfo.userId);\n        });\n      } else {\n        this.checkedNames = [];\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n</style>"],"sourceRoot":"src/components"}]}